 The information information of 'C:\FlightDream\Debug\Tools\ExeInfo\LO_Viewer\GraphicsXP.dll' is:
--------------------------------------------------------
Export symbols:
---------------------------------------------
	CHARACTERISTICS                   0x00000000
	TIME DATE STAMP                   0x41ac64cf    Tue Nov 30 04:17:19 2004
	MAJOR VERSION                     0x0000
	MINOR VERSION                     0x0000
	NAME                              0x000410c6    'GraphicsXP.dll'
	BASE                              0x00000001
	NUMBER OF FUNCTIONS               731
	NUMBER OF NAMES                   731
	ADDRESS OF FUNCTIONS              0x0003f438
	ADDRESS OF NAMES                  0x0003ffa4
	ADDRESS OF NAME ORDINALS          0x00040b10
public: __thiscall Graphics::Animation<int>::Animation<int>(class Graphics::Animation<int> const &)
public: __thiscall Graphics::Animation<int>::Animation<int>(void)
public: __thiscall Graphics::Animation<float>::Animation<float>(class Graphics::Animation<float> const &)
public: __thiscall Graphics::Animation<float>::Animation<float>(void)
public: __thiscall Graphics::Animation<class Quaternion>::Animation<class Quaternion>(class Graphics::Animation<class Quaternion> const &)
public: __thiscall Graphics::Animation<class Quaternion>::Animation<class Quaternion>(void)
public: __thiscall Graphics::Animation<class Vector3>::Animation<class Vector3>(class Graphics::Animation<class Vector3> const &)
public: __thiscall Graphics::Animation<class Vector3>::Animation<class Vector3>(void)
public: __thiscall Graphics::AnimTransformNode::AnimTransformNode(class Graphics::AnimTransformNode const &)
public: __thiscall Graphics::AnimTransformNode::AnimTransformNode(class Graphics::ModelNode *)
public: __thiscall Graphics::AnimationBase::AnimationBase(class Graphics::AnimationBase const &)
public: __thiscall Graphics::AnimationBase::AnimationBase(void)
public: __thiscall Graphics::BillboardNode::BillboardNode(class Graphics::BillboardNode const &)
public: __thiscall Graphics::BillboardNode::BillboardNode(class Graphics::ModelNode *)
public: __thiscall Graphics::CMD_Node::CMD_Node(class Graphics::CMD_Node const &)
public: __thiscall Graphics::CMD_Node::CMD_Node(class Graphics::ModelNode *)
public: __thiscall Graphics::Camera::Camera(class Graphics::Camera const &)
public: __thiscall Graphics::Camera::Camera(enum Graphics::Camera::Type)
public: __thiscall Graphics::CustomGeometry::CustomGeometry(class Graphics::CustomGeometry const &)
public: __thiscall Graphics::CustomGeometry::CustomGeometry(void)
public: __thiscall Graphics::CustomMaterial::CustomMaterial(class Graphics::CustomMaterial const &)
public: __thiscall Graphics::CustomMaterial::CustomMaterial(void)
public: __thiscall Graphics::DefModel::DefModel(class Graphics::DefModel const &)
public: __thiscall Graphics::DefModel::DefModel(void)
public: __thiscall DefResourceManager::DefResourceManager(class DefResourceManager const &)
public: __thiscall DefResourceManager::DefResourceManager(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: __thiscall Graphics::EffectNode::EffectNode(class Graphics::EffectNode const &)
public: __thiscall Graphics::EffectNode::EffectNode(class Graphics::ModelNode *)
public: __thiscall Graphics::FastNopNode::FastNopNode(class Graphics::FastNopNode const &)
public: __thiscall Graphics::FastNopNode::FastNopNode(class Graphics::ModelNode *)
public: __thiscall Graphics::FileModelNode::FileModelNode(class Graphics::FileModelNode const &)
public: __thiscall Graphics::FileModelNode::FileModelNode(class Graphics::ModelNode *)
public: __thiscall Graphics::Fog::Fog(class Graphics::Fog const &)
public: __thiscall Graphics::Fog::Fog(void)
public: __thiscall FrameMemoryHeap::FrameMemoryHeap(int,int)
public: __thiscall Graphics::Geometry::Geometry(class Graphics::Geometry const &)
public: __thiscall Graphics::Geometry::Geometry(void)
public: __thiscall Graphics::GeometryBank::GeometryBank(class Graphics::GeometryBank const &)
public: __thiscall Graphics::GeometryBank::GeometryBank(void)
public: __thiscall Graphics::GeometryNode::GeometryNode(class Graphics::GeometryNode const &)
public: __thiscall Graphics::GeometryNode::GeometryNode(class Graphics::ModelNode *)
public: __thiscall Graphics::HelperNode::HelperNode(class Graphics::HelperNode const &)
public: __thiscall Graphics::HelperNode::HelperNode(class Graphics::ModelNode *)
public: __thiscall Graphics::IMatEditor::IMatEditor(class Graphics::IMatEditor const &)
public: __thiscall Graphics::IMatEditor::IMatEditor(void)
public: __thiscall Graphics::IntersectionParser::IntersectionParser(class Graphics::IntersectionParser const &)
public: __thiscall Graphics::IntersectionParser::IntersectionParser(enum Graphics::ModelParsePurpose)
public: __thiscall Graphics::LOD_Model::LOD_Model(class Graphics::LOD_Model const &)
public: __thiscall Graphics::LOD_Model::LOD_Model(void)
public: __thiscall Graphics::Light::Light(class Graphics::Light const &)
public: __thiscall Graphics::Light::Light(void)
public: __thiscall Graphics::LodModelNode::LodModelNode(class Graphics::LodModelNode const &)
public: __thiscall Graphics::LodModelNode::LodModelNode(class Graphics::ModelNode *)
public: __thiscall Graphics::Material::Material(class Graphics::Material const &)
public: __thiscall Graphics::Material::Material(void)
public: __thiscall Graphics::Model::Model(class Graphics::Model const &)
public: __thiscall Graphics::Model::Model(void)
public: __thiscall Graphics::ModelConnector::ModelConnector(class Graphics::ModelConnector const &)
public: __thiscall Graphics::ModelConnector::ModelConnector(void)
public: __thiscall Graphics::ModelHeader::ModelHeader(class Graphics::ModelHeader const &)
public: __thiscall Graphics::ModelHeader::ModelHeader(void)
public: __thiscall Graphics::ModelInstance::ModelInstance(class Graphics::ModelInstance const &)
public: __thiscall Graphics::ModelInstance::ModelInstance(void)
public: __thiscall Graphics::ModelInstanceImpl::ModelInstanceImpl(class Graphics::ModelInstanceImpl const &)
public: __thiscall Graphics::ModelInstanceImpl::ModelInstanceImpl(class Graphics::Model *)
public: __thiscall Graphics::ModelManager::ModelManager(class Graphics::ModelManager const &)
public: __thiscall Graphics::ModelManager::ModelManager(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: __thiscall Graphics::ModelNode::ModelNode(class Graphics::ModelNode const &)
public: __thiscall Graphics::ModelNode::ModelNode(class Graphics::ModelNode *)
public: __thiscall Graphics::ModelParser::ModelParser(class Graphics::ModelParser const &)
public: __thiscall Graphics::ModelParser::ModelParser(enum Graphics::ModelParsePurpose)
public: __thiscall Graphics::MultiMaterialNode::MultiMaterialNode(class Graphics::MultiMaterialNode const &)
public: __thiscall Graphics::MultiMaterialNode::MultiMaterialNode(class Graphics::ModelNode *)
public: __thiscall Plugin::Plugin(class Plugin const &)
public: __thiscall Plugin::Plugin(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: __thiscall ReferenceResource::ReferenceResource(class ReferenceResource const &)
public: __thiscall ReferenceResource::ReferenceResource(void)
public: __thiscall Graphics::RenderFont::RenderFont(class Graphics::RenderFont const &)
public: __thiscall Graphics::RenderFont::RenderFont(void)
public: __thiscall Graphics::RenderObject::RenderObject(class Graphics::RenderObject const &)
public: __thiscall Graphics::RenderObject::RenderObject(void)
public: __thiscall Graphics::RenderObject::RenderObject(bool)
public: __thiscall Graphics::RenderParser::RenderParser(class Graphics::RenderParser const &)
public: __thiscall Graphics::RenderParser::RenderParser(void)
public: __thiscall Graphics::RenderText::RenderText(class Graphics::RenderText const &)
public: __thiscall Graphics::RenderText::RenderText(void)
public: __thiscall Graphics::Renderer::Renderer(class Graphics::Renderer const &)
public: __thiscall Graphics::Renderer::Renderer(void)
public: __thiscall Graphics::RendererCallback::RendererCallback(class Graphics::RendererCallback const &)
public: __thiscall Graphics::RendererCallback::RendererCallback(void)
public: __thiscall Resource::Resource(class Resource const &)
public: __thiscall Resource::Resource(void)
public: __thiscall ResourceManager::ResourceManager(class ResourceManager const &)
public: __thiscall ResourceManager::ResourceManager(void)
public: __thiscall Graphics::SegmentNode::SegmentNode(class Graphics::SegmentNode const &)
public: __thiscall Graphics::SegmentNode::SegmentNode(class Graphics::ModelNode *)
public: __thiscall Graphics::SegmentParser::SegmentParser(class Graphics::SegmentParser const &)
public: __thiscall Graphics::SegmentParser::SegmentParser(enum Graphics::ModelParsePurpose)
public: __thiscall Graphics::SelectorNode::SelectorNode(class Graphics::SelectorNode const &)
public: __thiscall Graphics::SelectorNode::SelectorNode(class Graphics::ModelNode *)
public: __thiscall Graphics::Texture::Texture(class Graphics::Texture const &)
public: __thiscall Graphics::Texture::Texture(void)
public: __thiscall Graphics::TransformNode::TransformNode(class Graphics::TransformNode const &)
public: __thiscall Graphics::TransformNode::TransformNode(class Graphics::ModelNode *)
public: __thiscall TypedResourceManager::TypedResourceManager(class TypedResourceManager const &)
public: __thiscall TypedResourceManager::TypedResourceManager(void)
public: __thiscall Graphics::UserBoxNode::UserBoxNode(class Graphics::UserBoxNode const &)
public: __thiscall Graphics::UserBoxNode::UserBoxNode(class Graphics::ModelNode *)
public: __thiscall Graphics::VolumeEffect::VolumeEffect(class Graphics::VolumeEffect const &)
public: __thiscall Graphics::VolumeEffect::VolumeEffect(void)
public: __thiscall gShapeObject::gShapeObject(class gShapeObject const &)
public: __thiscall gShapeObject::gShapeObject(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &)
public: __thiscall gShapeObject::gShapeObject(void)
public: virtual __thiscall Graphics::Animation<int>::~Animation<int>(void)
public: virtual __thiscall Graphics::Animation<float>::~Animation<float>(void)
public: virtual __thiscall Graphics::Animation<class Quaternion>::~Animation<class Quaternion>(void)
public: virtual __thiscall Graphics::Animation<class Vector3>::~Animation<class Vector3>(void)
public: virtual __thiscall Graphics::AnimTransformNode::~AnimTransformNode(void)
public: virtual __thiscall Graphics::AnimationBase::~AnimationBase(void)
public: virtual __thiscall Graphics::BillboardNode::~BillboardNode(void)
public: virtual __thiscall Graphics::CMD_Node::~CMD_Node(void)
public: __thiscall Graphics::CustomMaterial::~CustomMaterial(void)
public: virtual __thiscall Graphics::DefModel::~DefModel(void)
public: virtual __thiscall DefResourceManager::~DefResourceManager(void)
public: virtual __thiscall Graphics::EffectNode::~EffectNode(void)
public: virtual __thiscall Graphics::FastNopNode::~FastNopNode(void)
public: virtual __thiscall Graphics::FileModelNode::~FileModelNode(void)
public: __thiscall FrameMemoryHeap::~FrameMemoryHeap(void)
public: virtual __thiscall Graphics::Geometry::~Geometry(void)
public: virtual __thiscall Graphics::GeometryNode::~GeometryNode(void)
public: virtual __thiscall Graphics::HelperNode::~HelperNode(void)
public: virtual __thiscall Graphics::IntersectionParser::~IntersectionParser(void)
public: virtual __thiscall Graphics::LOD_Model::~LOD_Model(void)
public: virtual __thiscall Graphics::LodModelNode::~LodModelNode(void)
public: virtual __thiscall Graphics::Material::~Material(void)
public: virtual __thiscall Graphics::Model::~Model(void)
public: virtual __thiscall Graphics::ModelHeader::~ModelHeader(void)
public: virtual __thiscall Graphics::ModelManager::~ModelManager(void)
public: virtual __thiscall Graphics::ModelNode::~ModelNode(void)
public: virtual __thiscall Graphics::ModelParser::~ModelParser(void)
public: virtual __thiscall Graphics::MultiMaterialNode::~MultiMaterialNode(void)
public: virtual __thiscall Plugin::~Plugin(void)
public: virtual __thiscall Graphics::RenderFont::~RenderFont(void)
public: __thiscall Graphics::RenderObject::~RenderObject(void)
public: virtual __thiscall Graphics::RenderParser::~RenderParser(void)
public: __thiscall Graphics::RenderText::~RenderText(void)
public: virtual __thiscall Graphics::Renderer::~Renderer(void)
public: virtual __thiscall Graphics::RendererCallback::~RendererCallback(void)
public: virtual __thiscall Resource::~Resource(void)
public: virtual __thiscall ResourceManager::~ResourceManager(void)
public: virtual __thiscall Graphics::SegmentNode::~SegmentNode(void)
public: virtual __thiscall Graphics::SegmentParser::~SegmentParser(void)
public: virtual __thiscall Graphics::SelectorNode::~SelectorNode(void)
public: virtual __thiscall Graphics::Texture::~Texture(void)
public: virtual __thiscall Graphics::TransformNode::~TransformNode(void)
public: virtual __thiscall TypedResourceManager::~TypedResourceManager(void)
public: virtual __thiscall Graphics::UserBoxNode::~UserBoxNode(void)
public: virtual __thiscall Graphics::VolumeEffect::~VolumeEffect(void)
public: __thiscall gShapeObject::~gShapeObject(void)
public: class Graphics::Animation<int> & __thiscall Graphics::Animation<int>::operator=(class Graphics::Animation<int> const &)
public: class Graphics::Animation<float> & __thiscall Graphics::Animation<float>::operator=(class Graphics::Animation<float> const &)
public: class Graphics::Animation<class Quaternion> & __thiscall Graphics::Animation<class Quaternion>::operator=(class Graphics::Animation<class Quaternion> const &)
public: class Graphics::Animation<class Vector3> & __thiscall Graphics::Animation<class Vector3>::operator=(class Graphics::Animation<class Vector3> const &)
public: class Graphics::AnimTransformNode & __thiscall Graphics::AnimTransformNode::operator=(class Graphics::AnimTransformNode const &)
public: class Graphics::AnimationBase & __thiscall Graphics::AnimationBase::operator=(class Graphics::AnimationBase const &)
public: class Graphics::BillboardNode & __thiscall Graphics::BillboardNode::operator=(class Graphics::BillboardNode const &)
public: class Graphics::CMD_Node & __thiscall Graphics::CMD_Node::operator=(class Graphics::CMD_Node const &)
public: class Graphics::Camera & __thiscall Graphics::Camera::operator=(class Graphics::Camera const &)
public: class Graphics::CustomGeometry & __thiscall Graphics::CustomGeometry::operator=(class Graphics::CustomGeometry const &)
public: class Graphics::CustomMaterial & __thiscall Graphics::CustomMaterial::operator=(class Graphics::CustomMaterial const &)
public: class Graphics::DefModel & __thiscall Graphics::DefModel::operator=(class Graphics::DefModel const &)
public: class DefResourceManager & __thiscall DefResourceManager::operator=(class DefResourceManager const &)
public: class Graphics::EffectNode & __thiscall Graphics::EffectNode::operator=(class Graphics::EffectNode const &)
public: class Graphics::FastNopNode & __thiscall Graphics::FastNopNode::operator=(class Graphics::FastNopNode const &)
public: class Graphics::FileModelNode & __thiscall Graphics::FileModelNode::operator=(class Graphics::FileModelNode const &)
public: class Graphics::Fog & __thiscall Graphics::Fog::operator=(class Graphics::Fog const &)
public: class FrameMemoryHeap & __thiscall FrameMemoryHeap::operator=(class FrameMemoryHeap const &)
public: class Graphics::Geometry & __thiscall Graphics::Geometry::operator=(class Graphics::Geometry const &)
public: class Graphics::GeometryBank & __thiscall Graphics::GeometryBank::operator=(class Graphics::GeometryBank const &)
public: class Graphics::GeometryNode & __thiscall Graphics::GeometryNode::operator=(class Graphics::GeometryNode const &)
public: class Graphics::HelperNode & __thiscall Graphics::HelperNode::operator=(class Graphics::HelperNode const &)
public: class Graphics::IMatEditor & __thiscall Graphics::IMatEditor::operator=(class Graphics::IMatEditor const &)
public: class Graphics::IntersectionParser & __thiscall Graphics::IntersectionParser::operator=(class Graphics::IntersectionParser const &)
public: class Graphics::LOD_Model & __thiscall Graphics::LOD_Model::operator=(class Graphics::LOD_Model const &)
public: class Graphics::Light & __thiscall Graphics::Light::operator=(class Graphics::Light const &)
public: class Graphics::LodModelNode & __thiscall Graphics::LodModelNode::operator=(class Graphics::LodModelNode const &)
public: class Graphics::Material & __thiscall Graphics::Material::operator=(class Graphics::Material const &)
public: class Graphics::Model & __thiscall Graphics::Model::operator=(class Graphics::Model const &)
public: class Graphics::ModelConnector & __thiscall Graphics::ModelConnector::operator=(class Graphics::ModelConnector const &)
public: class Graphics::ModelHeader & __thiscall Graphics::ModelHeader::operator=(class Graphics::ModelHeader const &)
public: class Graphics::ModelInstance & __thiscall Graphics::ModelInstance::operator=(class Graphics::ModelInstance const &)
public: class Graphics::ModelInstanceImpl & __thiscall Graphics::ModelInstanceImpl::operator=(class Graphics::ModelInstanceImpl const &)
public: class Graphics::ModelManager & __thiscall Graphics::ModelManager::operator=(class Graphics::ModelManager const &)
public: class Graphics::ModelNode & __thiscall Graphics::ModelNode::operator=(class Graphics::ModelNode const &)
public: class Graphics::ModelParser & __thiscall Graphics::ModelParser::operator=(class Graphics::ModelParser const &)
public: class Graphics::MultiMaterialNode & __thiscall Graphics::MultiMaterialNode::operator=(class Graphics::MultiMaterialNode const &)
public: class Plugin & __thiscall Plugin::operator=(class Plugin const &)
public: class ReferenceResource & __thiscall ReferenceResource::operator=(class ReferenceResource const &)
public: class Graphics::RenderFont & __thiscall Graphics::RenderFont::operator=(class Graphics::RenderFont const &)
public: class Graphics::RenderObject & __thiscall Graphics::RenderObject::operator=(class Graphics::RenderObject const &)
public: class Graphics::RenderParser & __thiscall Graphics::RenderParser::operator=(class Graphics::RenderParser const &)
public: class Graphics::RenderText & __thiscall Graphics::RenderText::operator=(class Graphics::RenderText const &)
public: class Graphics::Renderer & __thiscall Graphics::Renderer::operator=(class Graphics::Renderer const &)
public: class Graphics::RendererCallback & __thiscall Graphics::RendererCallback::operator=(class Graphics::RendererCallback const &)
public: class Resource & __thiscall Resource::operator=(class Resource const &)
public: class ResourceManager & __thiscall ResourceManager::operator=(class ResourceManager const &)
public: class Graphics::SegmentNode & __thiscall Graphics::SegmentNode::operator=(class Graphics::SegmentNode const &)
public: class Graphics::SegmentParser & __thiscall Graphics::SegmentParser::operator=(class Graphics::SegmentParser const &)
public: class Graphics::SelectorNode & __thiscall Graphics::SelectorNode::operator=(class Graphics::SelectorNode const &)
public: class Graphics::Texture & __thiscall Graphics::Texture::operator=(class Graphics::Texture const &)
public: class Graphics::TransformNode & __thiscall Graphics::TransformNode::operator=(class Graphics::TransformNode const &)
public: class TypedResourceManager & __thiscall TypedResourceManager::operator=(class TypedResourceManager const &)
public: class Graphics::UserBoxNode & __thiscall Graphics::UserBoxNode::operator=(class Graphics::UserBoxNode const &)
public: class Graphics::VolumeEffect & __thiscall Graphics::VolumeEffect::operator=(class Graphics::VolumeEffect const &)
public: class gShapeObject & __thiscall gShapeObject::operator=(class gShapeObject const &)
const Graphics::Animation<int>::`vftable'{for `EagleDynamics::Common::Unknown<class EagleDynamics::Common::Serializable>'}
const Graphics::Animation<int>::`vftable'{for `Graphics::AnimationBase'}
const Graphics::Animation<float>::`vftable'{for `EagleDynamics::Common::Unknown<class EagleDynamics::Common::Serializable>'}
const Graphics::Animation<float>::`vftable'{for `Graphics::AnimationBase'}
const Graphics::Animation<class Quaternion>::`vftable'{for `EagleDynamics::Common::Unknown<class EagleDynamics::Common::Serializable>'}
const Graphics::Animation<class Quaternion>::`vftable'{for `Graphics::AnimationBase'}
const Graphics::Animation<class Vector3>::`vftable'{for `EagleDynamics::Common::Unknown<class EagleDynamics::Common::Serializable>'}
const Graphics::Animation<class Vector3>::`vftable'{for `Graphics::AnimationBase'}
const Graphics::AnimTransformNode::`vftable'
const Graphics::AnimationBase::`vftable'
const Graphics::BillboardNode::`vftable'
const Graphics::CMD_Node::`vftable'
const Graphics::CustomGeometry::`vftable'
const Graphics::CustomMaterial::`vftable'
const Graphics::DefModel::`vftable'
const DefResourceManager::`vftable'
const Graphics::EffectNode::`vftable'
const Graphics::FastNopNode::`vftable'
const Graphics::FileModelNode::`vftable'
const Graphics::Fog::`vftable'
const Graphics::Geometry::`vftable'
const Graphics::GeometryBank::`vftable'
const Graphics::GeometryNode::`vftable'
const Graphics::HelperNode::`vftable'{for `Graphics::ModelConnector'}
const Graphics::HelperNode::`vftable'{for `Graphics::TransformNode'}
const Graphics::IMatEditor::`vftable'
const Graphics::IntersectionParser::`vftable'
const Graphics::LOD_Model::`vftable'
const Graphics::Light::`vftable'
const Graphics::LodModelNode::`vftable'
const Graphics::Material::`vftable'
const Graphics::Model::`vftable'
const Graphics::ModelConnector::`vftable'
const Graphics::ModelHeader::`vftable'
const Graphics::ModelInstance::`vftable'
const Graphics::ModelInstanceImpl::`vftable'
const Graphics::ModelManager::`vftable'{for `DefResourceManager'}
const Graphics::ModelManager::`vftable'{for `Graphics::RendererCallback'}
const Graphics::ModelNode::`vftable'
const Graphics::ModelParser::`vftable'
const Graphics::MultiMaterialNode::`vftable'
const Plugin::`vftable'
const ReferenceResource::`vftable'
const Graphics::RenderFont::`vftable'
const Graphics::RenderParser::`vftable'
const Graphics::Renderer::`vftable'
const Graphics::RendererCallback::`vftable'
const Resource::`vftable'
const ResourceManager::`vftable'
const Graphics::SegmentNode::`vftable'
const Graphics::SegmentParser::`vftable'
const Graphics::SelectorNode::`vftable'
const Graphics::Texture::`vftable'
const Graphics::TransformNode::`vftable'
const TypedResourceManager::`vftable'
const Graphics::UserBoxNode::`vftable'
const Graphics::VolumeEffect::`vftable'
const gShapeObject::`vftable'
`string'
public: void __thiscall Graphics::AnimTransformNode::`default constructor closure'(void)
public: void __thiscall Graphics::BillboardNode::`default constructor closure'(void)
public: void __thiscall Graphics::CMD_Node::`default constructor closure'(void)
public: void __thiscall Graphics::Camera::`default constructor closure'(void)
public: void __thiscall Graphics::EffectNode::`default constructor closure'(void)
public: void __thiscall Graphics::FastNopNode::`default constructor closure'(void)
public: void __thiscall Graphics::FileModelNode::`default constructor closure'(void)
public: void __thiscall FrameMemoryHeap::`default constructor closure'(void)
public: void __thiscall Graphics::GeometryNode::`default constructor closure'(void)
public: void __thiscall Graphics::HelperNode::`default constructor closure'(void)
public: void __thiscall Graphics::IntersectionParser::`default constructor closure'(void)
public: void __thiscall Graphics::LodModelNode::`default constructor closure'(void)
public: void __thiscall Graphics::ModelInstanceImpl::`default constructor closure'(void)
public: void __thiscall Graphics::ModelManager::`default constructor closure'(void)
public: void __thiscall Graphics::ModelNode::`default constructor closure'(void)
public: void __thiscall Graphics::MultiMaterialNode::`default constructor closure'(void)
public: void __thiscall Graphics::SegmentNode::`default constructor closure'(void)
public: void __thiscall Graphics::SegmentParser::`default constructor closure'(void)
public: void __thiscall Graphics::SelectorNode::`default constructor closure'(void)
public: void __thiscall Graphics::TransformNode::`default constructor closure'(void)
public: void __thiscall Graphics::UserBoxNode::`default constructor closure'(void)
private: int __thiscall Graphics::ModelNode::AddChild(class Graphics::ModelNode *)
protected: void __thiscall Graphics::DefModel::AddConnector(class Graphics::HelperNode *)
public: void __thiscall Graphics::Animation<int>::AddKey(float,enum Graphics::AnimInterpolation,int)
public: void __thiscall Graphics::Animation<float>::AddKey(float,enum Graphics::AnimInterpolation,float)
public: void __thiscall Graphics::Animation<class Quaternion>::AddKey(float,enum Graphics::AnimInterpolation,class Quaternion)
public: void __thiscall Graphics::Animation<class Vector3>::AddKey(float,enum Graphics::AnimInterpolation,class Vector3)
public: virtual void __thiscall Graphics::AnimTransformNode::CalculateBox(void)
public: virtual void __thiscall Graphics::BillboardNode::CalculateBox(void)
public: virtual void __thiscall Graphics::GeometryNode::CalculateBox(void)
public: virtual void __thiscall Graphics::ModelNode::CalculateBox(void)
public: virtual void __thiscall Graphics::TransformNode::CalculateBox(void)
protected: virtual void __thiscall Graphics::BillboardNode::CameraTransform(class Position3 &,class Position3 const &)
public: void __thiscall Graphics::ModelNode::ChangeParent(class Graphics::ModelNode *)
protected: void __thiscall Graphics::CMD_Node::CheckForCollision(class Graphics::ModelNode *)
public: virtual unsigned char __thiscall gShapeObject::Class(void)
public: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __thiscall Graphics::DefModel::ClassName(void)
public: virtual void __thiscall Graphics::Animation<int>::ClearKeys(void)
public: virtual void __thiscall Graphics::Animation<float>::ClearKeys(void)
public: virtual void __thiscall Graphics::Animation<class Quaternion>::ClearKeys(void)
public: virtual void __thiscall Graphics::Animation<class Vector3>::ClearKeys(void)
protected: virtual void __thiscall Graphics::DefModel::ClearStats(void)
public: virtual class Graphics::Model * __thiscall Graphics::DefModel::Clone(void)
public: virtual class Graphics::Model * __thiscall Graphics::LOD_Model::Clone(void)
public: virtual class Graphics::ModelNode * __thiscall Graphics::AnimTransformNode::CloneEmpty(void)
public: virtual class Graphics::ModelNode * __thiscall Graphics::BillboardNode::CloneEmpty(void)
public: virtual class Graphics::ModelNode * __thiscall Graphics::FastNopNode::CloneEmpty(void)
public: virtual class Graphics::ModelNode * __thiscall Graphics::GeometryNode::CloneEmpty(void)
public: virtual class Graphics::ModelNode * __thiscall Graphics::HelperNode::CloneEmpty(void)
public: virtual class Graphics::ModelNode * __thiscall Graphics::LodModelNode::CloneEmpty(void)
public: virtual class Graphics::ModelNode * __thiscall Graphics::ModelNode::CloneEmpty(void)
public: virtual class Graphics::ModelNode * __thiscall Graphics::SegmentNode::CloneEmpty(void)
public: virtual class Graphics::ModelNode * __thiscall Graphics::SelectorNode::CloneEmpty(void)
public: virtual class Graphics::ModelNode * __thiscall Graphics::TransformNode::CloneEmpty(void)
public: virtual class Graphics::ModelNode * __thiscall Graphics::UserBoxNode::CloneEmpty(void)
public: virtual void __thiscall Graphics::AnimTransformNode::CopyFrom(class Graphics::ModelNode *)
public: virtual void __thiscall Graphics::BillboardNode::CopyFrom(class Graphics::ModelNode *)
public: virtual void __thiscall Graphics::FastNopNode::CopyFrom(class Graphics::ModelNode *)
public: virtual void __thiscall Graphics::GeometryNode::CopyFrom(class Graphics::ModelNode *)
public: virtual void __thiscall Graphics::HelperNode::CopyFrom(class Graphics::ModelNode *)
public: virtual void __thiscall Graphics::LodModelNode::CopyFrom(class Graphics::ModelNode *)
public: virtual void __thiscall Graphics::ModelNode::CopyFrom(class Graphics::ModelNode *)
public: virtual void __thiscall Graphics::SegmentNode::CopyFrom(class Graphics::ModelNode *)
public: virtual void __thiscall Graphics::SelectorNode::CopyFrom(class Graphics::ModelNode *)
public: virtual void __thiscall Graphics::TransformNode::CopyFrom(class Graphics::ModelNode *)
public: virtual void __thiscall Graphics::UserBoxNode::CopyFrom(class Graphics::ModelNode *)
public: static class Resource * __cdecl Graphics::DefModel::Create(enum ResourceType,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: static class Resource * __cdecl Graphics::LOD_Model::Create(enum ResourceType,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: virtual bool __thiscall Graphics::DefModel::CreateByName(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: virtual class Resource * __thiscall DefResourceManager::CreateByName(enum ResourceType,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: virtual class Resource * __thiscall Graphics::ModelManager::CreateByName(enum ResourceType,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: virtual bool __thiscall Resource::CreateByName(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: virtual class Position3 * __thiscall Graphics::AnimTransformNode::CreateCurTransform(class Graphics::ModelInstance &,class Position3 const &)
public: virtual class Position3 * __thiscall Graphics::BillboardNode::CreateCurTransform(class Graphics::ModelInstance &,class Position3 const &)
public: virtual class Position3 * __thiscall Graphics::TransformNode::CreateCurTransform(class Graphics::ModelInstance &,class Position3 const &)
public: class Graphics::VolumeEffect * __thiscall Graphics::EffectNode::CreateEffect(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
protected: virtual bool __thiscall Graphics::CMD_Node::CreateMaterial(class Graphics::Material * &,class gDrawCommand *)
protected: class Graphics::ModelNode * __thiscall Graphics::LOD_Model::CreateNode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class Graphics::ModelNode *,class Graphics::ModelManager *)
protected: void __thiscall Graphics::CMD_Node::CreateSegments(class gShapeObject *)
float __cdecl Graphics::DParamScale(class Graphics::ModelInstance *,int,float)
public: void __thiscall Graphics::Animation<int>::DeleteKey(struct Graphics::Animation<int>::Key *)
public: void __thiscall Graphics::Animation<float>::DeleteKey(struct Graphics::Animation<float>::Key *)
public: void __thiscall Graphics::Animation<class Quaternion>::DeleteKey(struct Graphics::Animation<class Quaternion>::Key *)
public: void __thiscall Graphics::Animation<class Vector3>::DeleteKey(struct Graphics::Animation<class Vector3>::Key *)
public: void __thiscall Graphics::AnimTransformNode::DestroyMoveAnim(void)
public: void __thiscall Graphics::AnimTransformNode::DestroyRotateAnim(void)
public: void __thiscall Graphics::AnimTransformNode::DestroyScaleAnim(void)
public: void __thiscall Graphics::AnimTransformNode::DestroyScaleOrientAnim(void)
protected: void __thiscall Graphics::LOD_Model::ExpandMultiMaterialNode(class Graphics::MultiMaterialNode *,class std::_Tree<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct std::pair<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const ,struct Graphics::ModelSkinInfo>,struct std::map<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,struct Graphics::ModelSkinInfo,class Graphics::LO
protected: virtual void __thiscall Graphics::DefModel::FillStats(class Graphics::ModelNode *)
protected: virtual void __thiscall Graphics::DefModel::FillStatsAnimNode(class Graphics::AnimTransformNode *)
protected: virtual void __thiscall Graphics::DefModel::FillStatsAnimation(class Graphics::AnimationBase *)
protected: virtual void __thiscall Graphics::DefModel::FillStatsGeometry(class Graphics::GeometryNode *)
protected: virtual void __thiscall Graphics::LOD_Model::FillStatsGeometry(class Graphics::GeometryNode *)
protected: virtual void __thiscall Graphics::DefModel::FillStatsMultiMatNode(class Graphics::MultiMaterialNode *)
protected: virtual void __thiscall Graphics::LOD_Model::FillStatsMultiMatNode(class Graphics::MultiMaterialNode *)
protected: virtual void __thiscall Graphics::DefModel::FillStatsNop(class Graphics::FastNopNode *)
protected: virtual void __thiscall Graphics::DefModel::FillStatsSelector(class Graphics::SelectorNode *)
protected: virtual void __thiscall Graphics::DefModel::FillStatsUserBox(class Graphics::UserBoxNode *)
int __cdecl Graphics::FindAllParts(class Graphics::ModelInstance &,class Vector3 const &,float,class std::vector<float,class std::allocator<float> > &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &)
float __cdecl Graphics::FindClosestPart(class Graphics::ModelInstance &,class Vector3 const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
protected: class Graphics::ModelNode * __thiscall Graphics::CMD_Node::FindCollisionScene(void)
public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall Graphics::ModelManager::FindFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
protected: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall Graphics::ModelManager::FindInPaths(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
protected: class Graphics::ModelNode * __thiscall Graphics::DefModel::FindNode(class Graphics::ModelNode *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: virtual void __thiscall Graphics::Material::FinishDrawMaterial(void)
public: virtual void __thiscall Graphics::DefModel::FreeToStep(int)
public: virtual void __thiscall Graphics::LOD_Model::FreeToStep(int)
public: virtual void __thiscall Graphics::Material::FreeToStep(int)
public: class Vector3 const & __thiscall Graphics::SegmentNode::GetA(void)
public: virtual class Vector3 const & __thiscall Graphics::CustomMaterial::GetAmbientColor(void)
public: virtual class Graphics::Texture * __thiscall Graphics::CustomMaterial::GetAmbientMap(void)
public: class Vector3 const & __thiscall Graphics::SegmentNode::GetB(void)
public: enum Graphics::BillboardAxis __thiscall Graphics::BillboardNode::GetBillboardAxis(void)
public: enum Graphics::BillboardType __thiscall Graphics::BillboardNode::GetBillboardType(void)
public: virtual class Box const & __thiscall Graphics::DefModel::GetBoundingBox(void)
public: virtual class Box const & __thiscall Graphics::ModelNode::GetBox(void)
public: virtual class Vector3 const & __thiscall Graphics::DefModel::GetCenter(void)
public: class Graphics::ModelNode * __thiscall Graphics::ModelNode::GetChild(int)
public: int __thiscall Graphics::ModelNode::GetChildrenCount(void)
public: enum Graphics::ModelParsePurpose __thiscall Graphics::ModelNode::GetChildrenPurposes(void)
public: virtual class Graphics::ModelConnector * __thiscall Graphics::DefModel::GetConnector(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: virtual class Graphics::ModelConnector * __thiscall Graphics::DefModel::GetConnector(int)
public: virtual int __thiscall Graphics::DefModel::GetConnectorCount(void)
public: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __thiscall Graphics::HelperNode::GetConnectorName(void)
public: virtual class Position3 const & __thiscall Graphics::HelperNode::GetConnectorPos(class Graphics::ModelInstance &)
public: virtual class Graphics::Texture * __thiscall Graphics::CustomMaterial::GetCubeMap(void)
public: virtual void __thiscall Graphics::CustomMaterial::GetDataFrom(class Graphics::CustomMaterial *)
public: void * __thiscall Graphics::FileModelNode::GetDataPointer(void)
public: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall Resource::GetDebugString(void)
public: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __thiscall Graphics::HelperNode::GetDefaultSubmodel(void)
public: virtual int __thiscall Resource::GetDependentsLoadStep(void)
public: virtual class Vector3 const & __thiscall Graphics::CustomMaterial::GetDiffuseColor(void)
public: virtual class Graphics::Texture * __thiscall Graphics::CustomMaterial::GetDiffuseMap(int)
public: static float __cdecl Graphics::LodModelNode::GetDistanceMultiplier(void)
public: virtual class HeapVector<struct Graphics::DynamicParam> const & __thiscall Graphics::ModelInstanceImpl::GetDrawArguments(void)
public: virtual int __thiscall Graphics::DefModel::GetDynamicParamCount(void)
public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __thiscall Graphics::EffectNode::GetEffectClass(void)
public: enum Graphics::EffectTarget __thiscall Graphics::EffectNode::GetEffectTarget(void)
public: float __thiscall Graphics::FastNopNode::GetEnd(void)
public: virtual float __thiscall Graphics::Animation<int>::GetFinish(void)
public: virtual float __thiscall Graphics::Animation<float>::GetFinish(void)
public: virtual float __thiscall Graphics::Animation<class Quaternion>::GetFinish(void)
public: virtual float __thiscall Graphics::Animation<class Vector3>::GetFinish(void)
public: unsigned int __thiscall Graphics::Material::GetFlags(unsigned int)
public: virtual class Position3 const & __thiscall Graphics::TransformNode::GetFullTransform(class Graphics::ModelInstance &)
public: virtual void __thiscall Graphics::GeometryNode::GetGeomOffset(unsigned int &,unsigned int &)
public: class Graphics::Geometry * __thiscall Graphics::GeometryNode::GetGeometry(void)
public: static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl Graphics::CMD_Node::GetGeometryClass(void)
public: virtual class Graphics::Texture * __thiscall Graphics::CustomMaterial::GetGlossMap(void)
public: static float __cdecl Graphics::CMD_Node::GetGlossiness(void)
public: virtual float __thiscall Graphics::CustomMaterial::GetGlossiness(void)
public: virtual unsigned int __thiscall Resource::GetLastFrame(void)
public: virtual bool __thiscall Graphics::CustomMaterial::GetLighted(void)
public: virtual float __thiscall Graphics::DefModel::GetLoadPriority(void)
public: virtual float __thiscall Graphics::Material::GetLoadPriority(void)
public: virtual int __thiscall Graphics::DefModel::GetLoadStep(void)
public: virtual int __thiscall Graphics::LOD_Model::GetLoadStep(void)
public: virtual int __thiscall Graphics::Material::GetLoadStep(void)
public: virtual int __thiscall Graphics::DefModel::GetLoadStepCount(void)
public: virtual int __thiscall Graphics::LOD_Model::GetLoadStepCount(void)
public: virtual int __thiscall Graphics::Material::GetLoadStepCount(void)
public: float __thiscall Graphics::LodModelNode::GetLodDistance(int)
public: int __thiscall Graphics::LodModelNode::GetLodLevel(float)
public: class Graphics::Material * __thiscall Graphics::GeometryNode::GetMaterial(void)
public: class Graphics::Material * __thiscall Graphics::MultiMaterialNode::GetMaterial(int)
public: virtual __int64 __thiscall Graphics::CustomMaterial::GetMaterialCaps(void)
public: static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __cdecl Graphics::CMD_Node::GetMaterialClass(void)
public: int __thiscall Graphics::MultiMaterialNode::GetMaterialCount(void)
public: virtual void __thiscall Graphics::DefModel::GetMaterialList(class std::vector<class Graphics::Material *,class std::allocator<class Graphics::Material *> > &)
public: virtual void __thiscall Graphics::GeometryNode::GetMaterialList(class std::vector<class Graphics::Material *,class std::allocator<class Graphics::Material *> > &)
public: virtual void __thiscall Graphics::ModelNode::GetMaterialList(class std::vector<class Graphics::Material *,class std::allocator<class Graphics::Material *> > &)
public: virtual int __thiscall Graphics::AnimTransformNode::GetMaxParamIndex(void)
public: virtual int __thiscall Graphics::FastNopNode::GetMaxParamIndex(void)
public: virtual int __thiscall Graphics::ModelNode::GetMaxParamIndex(void)
public: virtual int __thiscall Graphics::SelectorNode::GetMaxParamIndex(void)
public: int __thiscall Graphics::Animation<int>::GetMaximum(void)
public: float __thiscall Graphics::Animation<float>::GetMaximum(void)
public: class Quaternion __thiscall Graphics::Animation<class Quaternion>::GetMaximum(void)
public: class Vector3 __thiscall Graphics::Animation<class Vector3>::GetMaximum(void)
public: int __thiscall Graphics::Animation<int>::GetMinimum(void)
public: float __thiscall Graphics::Animation<float>::GetMinimum(void)
public: class Quaternion __thiscall Graphics::Animation<class Quaternion>::GetMinimum(void)
public: class Vector3 __thiscall Graphics::Animation<class Vector3>::GetMinimum(void)
public: virtual class Graphics::Model * __thiscall Graphics::ModelInstanceImpl::GetModel(void)
public: class Graphics::ModelNode * __thiscall Graphics::DefModel::GetModelNodeRoot(void)
public: class Graphics::Animation<class Vector3> * __thiscall Graphics::AnimTransformNode::GetMoveAnim(void)
public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __thiscall Graphics::ModelNode::GetName(void)
public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __thiscall Plugin::GetName(void)
public: struct Graphics::Animation<int>::Key * __thiscall Graphics::Animation<int>::GetNextKey(float)
public: struct Graphics::Animation<float>::Key * __thiscall Graphics::Animation<float>::GetNextKey(float)
public: struct Graphics::Animation<class Quaternion>::Key * __thiscall Graphics::Animation<class Quaternion>::GetNextKey(float)
public: struct Graphics::Animation<class Vector3>::Key * __thiscall Graphics::Animation<class Vector3>::GetNextKey(float)
public: class Graphics::ModelNode * __thiscall Graphics::DefModel::GetNode(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: enum Graphics::ModelParsePurpose __thiscall Graphics::ModelNode::GetNodePurpose(void)
public: virtual class Graphics::Texture * __thiscall Graphics::CustomMaterial::GetNormalMap(void)
public: virtual float __thiscall Graphics::CustomMaterial::GetOpacity(void)
public: virtual float __thiscall Graphics::DefModel::GetParamFinish(int)
public: virtual int __thiscall Graphics::Animation<int>::GetParamIndex(void)
public: virtual int __thiscall Graphics::Animation<float>::GetParamIndex(void)
public: virtual int __thiscall Graphics::Animation<class Quaternion>::GetParamIndex(void)
public: virtual int __thiscall Graphics::Animation<class Vector3>::GetParamIndex(void)
public: virtual float __thiscall Graphics::DefModel::GetParamStart(int)
public: class Graphics::ModelNode * __thiscall Graphics::ModelNode::GetParent(void)
public: int __thiscall Graphics::ModelNode::GetParentIndex(void)
public: virtual class Position3 const & __thiscall Graphics::ModelInstanceImpl::GetPosition(void)
public: struct Graphics::Animation<int>::Key * __thiscall Graphics::Animation<int>::GetPrevKey(float)
public: struct Graphics::Animation<float>::Key * __thiscall Graphics::Animation<float>::GetPrevKey(float)
public: struct Graphics::Animation<class Quaternion>::Key * __thiscall Graphics::Animation<class Quaternion>::GetPrevKey(float)
public: struct Graphics::Animation<class Vector3>::Key * __thiscall Graphics::Animation<class Vector3>::GetPrevKey(float)
public: virtual class Vector3 const & __thiscall Graphics::CustomMaterial::GetRadianceColor(void)
public: virtual class Graphics::Texture * __thiscall Graphics::CustomMaterial::GetRadianceMap(void)
public: virtual float __thiscall Graphics::DefModel::GetRadius(void)
public: class Graphics::ModelHeader * __thiscall Graphics::FileModelNode::GetRenderHeader(void)
class Resource * __cdecl GetResourceReference(class Resource *)
public: class Graphics::ModelNode * __thiscall Graphics::ModelNode::GetRoot(void)
public: class Graphics::Animation<class Quaternion> * __thiscall Graphics::AnimTransformNode::GetRotateAnim(void)
public: class Graphics::Animation<class Vector3> * __thiscall Graphics::AnimTransformNode::GetScaleAnim(void)
public: class Graphics::Animation<class Quaternion> * __thiscall Graphics::AnimTransformNode::GetScaleOrientAnim(void)
public: class Graphics::Animation<int> & __thiscall Graphics::MultiMaterialNode::GetSelector(void)
public: class Graphics::Animation<int> & __thiscall Graphics::SelectorNode::GetSelector(void)
public: unsigned int __thiscall Graphics::FileModelNode::GetSerializerPartSize(void)
public: virtual class Vector3 const & __thiscall Graphics::CustomMaterial::GetSpecularColor(void)
public: virtual class Graphics::Texture * __thiscall Graphics::CustomMaterial::GetSpecularColorMap(void)
public: virtual class Graphics::Texture * __thiscall Graphics::CustomMaterial::GetSpecularLevelMap(void)
public: virtual float __thiscall Graphics::Animation<int>::GetStart(void)
public: virtual float __thiscall Graphics::Animation<float>::GetStart(void)
public: virtual float __thiscall Graphics::Animation<class Quaternion>::GetStart(void)
public: virtual float __thiscall Graphics::Animation<class Vector3>::GetStart(void)
public: float __thiscall Graphics::FastNopNode::GetStart(void)
public: class Position3 const & __thiscall Graphics::TransformNode::GetStaticTransform(void)
public: class Graphics::TransformNode * __thiscall Graphics::DefModel::GetTransform(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: virtual class Graphics::Texture * __thiscall Graphics::CustomMaterial::GetTransparencyMap(void)
protected: int __thiscall Graphics::CMD_Node::GetTriangleCount(class Graphics::ModelNode *,int)
public: virtual bool __thiscall Graphics::CustomMaterial::GetTwoSided(void)
public: virtual int __thiscall Graphics::Material::GetTypeMaterial(void)
public: bool __thiscall Graphics::SelectorNode::GetUseAll(void)
public: virtual class Box const & __thiscall Graphics::DefModel::GetUserBox(void)
public: virtual class Box const & __thiscall Graphics::Model::GetUserBox(void)
public: class Box const & __thiscall Graphics::UserBoxNode::GetUserBox(void)
public: int __thiscall Graphics::Animation<int>::GetValue(class HeapVector<struct Graphics::DynamicParam> const &)
public: int __thiscall Graphics::Animation<int>::GetValue(float)
public: float __thiscall Graphics::Animation<float>::GetValue(class HeapVector<struct Graphics::DynamicParam> const &)
public: float __thiscall Graphics::Animation<float>::GetValue(float)
public: class Quaternion __thiscall Graphics::Animation<class Quaternion>::GetValue(class HeapVector<struct Graphics::DynamicParam> const &)
public: class Quaternion __thiscall Graphics::Animation<class Quaternion>::GetValue(float)
public: class Vector3 __thiscall Graphics::Animation<class Vector3>::GetValue(class HeapVector<struct Graphics::DynamicParam> const &)
public: class Vector3 __thiscall Graphics::Animation<class Vector3>::GetValue(float)
public: virtual bool __thiscall Graphics::CustomMaterial::GetWireframe(void)
public: virtual void __thiscall Graphics::Material::InitDrawMaterial(void)
protected: int __thiscall Graphics::Animation<int>::Interpolate(struct Graphics::Animation<int>::Key const &,struct Graphics::Animation<int>::Key const &,float)
protected: float __thiscall Graphics::Animation<float>::Interpolate(struct Graphics::Animation<float>::Key const &,struct Graphics::Animation<float>::Key const &,float)
protected: class Quaternion __thiscall Graphics::Animation<class Quaternion>::Interpolate(struct Graphics::Animation<class Quaternion>::Key const &,struct Graphics::Animation<class Quaternion>::Key const &,float)
protected: class Vector3 __thiscall Graphics::Animation<class Vector3>::Interpolate(struct Graphics::Animation<class Vector3>::Key const &,struct Graphics::Animation<class Vector3>::Key const &,float)
public: virtual bool __thiscall Graphics::GeometryNode::Intersect(class Graphics::ModelInstance *,class Graphics::IntersectionParser *,class Position3 const &)
bool __cdecl Graphics::IntersectModel(class Graphics::ModelInstance &,class Graphics::ModelInstance &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,class Vector3 *,class Vector3 *)
bool __cdecl Graphics::IntersectSegment(class Graphics::ModelInstance &,class Vector3 const &,class Vector3 const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,float *,class Vector3 *)
public: virtual bool __thiscall Graphics::HelperNode::IsConnectorVisible(class Graphics::ModelInstance &)
public: virtual bool __thiscall Resource::IsRegistered(void)
public: virtual int __thiscall Graphics::Animation<int>::KeyCount(void)
public: virtual int __thiscall Graphics::Animation<float>::KeyCount(void)
public: virtual int __thiscall Graphics::Animation<class Quaternion>::KeyCount(void)
public: virtual int __thiscall Graphics::Animation<class Vector3>::KeyCount(void)
public: void __thiscall Graphics::ModelNode::KillChildren(void)
protected: class Resource * __thiscall Graphics::ModelManager::LoadAsLodModel(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
protected: virtual void __thiscall Graphics::FileModelNode::LoadData(class Graphics::ModelNode *)
public: virtual void __thiscall Graphics::GeometryNode::LoadData(class Graphics::FileModelNode *)
public: bool __thiscall Graphics::CMD_Node::LoadFromCMD(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: bool __thiscall Graphics::FileModelNode::LoadFromFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: bool __thiscall Graphics::LOD_Model::LoadModelConfig(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class Graphics::ModelManager *)
protected: bool __thiscall Graphics::LOD_Model::LoadNode(class Graphics::ModelNode *)
public: virtual void __thiscall Graphics::GeometryNode::LoadResources(int)
public: virtual void __thiscall Graphics::ModelNode::LoadResources(int)
public: virtual void __thiscall Graphics::MultiMaterialNode::LoadResources(int)
protected: bool __thiscall Graphics::LOD_Model::LoadSkinSet(int,class ConfigParser::iterator)
public: virtual void __thiscall Graphics::DefModel::LoadToStep(int)
public: virtual void __thiscall Graphics::LOD_Model::LoadToStep(int)
public: virtual void __thiscall Graphics::Material::LoadToStep(int)
public: virtual void __thiscall Graphics::DefModel::LoadWithDependents(int)
public: virtual void __thiscall Resource::LoadWithDependents(int)
public: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __thiscall Resource::Name(void)
public: virtual void __thiscall Graphics::RendererCallback::OnAfterDrawObject(class Graphics::RenderObject *)
public: virtual void __thiscall Graphics::RendererCallback::OnAfterPresent(void)
public: virtual void __thiscall Graphics::RendererCallback::OnBeforeDrawObject(class Graphics::RenderObject *)
public: virtual void __thiscall Graphics::RendererCallback::OnBeforePresent(void)
public: virtual void __thiscall Graphics::RendererCallback::OnBeginScene(void)
public: virtual void __thiscall Graphics::RendererCallback::OnClear(void)
public: virtual void __thiscall Graphics::RendererCallback::OnEndFrame(void)
public: virtual void __thiscall Graphics::RendererCallback::OnEndScene(void)
public: virtual void __thiscall Graphics::RendererCallback::OnFreeResources(void)
public: virtual void __thiscall Graphics::RendererCallback::OnGetSystemDescriptor(struct Graphics::SystemDescriptor &)
public: virtual void __thiscall Graphics::ModelManager::OnInitialize(class ConfigParser *)
public: virtual void __thiscall Graphics::RendererCallback::OnInitialize(class ConfigParser *)
public: virtual void __thiscall Graphics::ModelInstance::OnParseConnector(class Graphics::ModelConnector *,class Graphics::ModelParser *,class Position3 const &)
public: virtual void __thiscall Graphics::RendererCallback::OnRetreiveParams(class ConfigParser * &)
public: virtual void __thiscall Graphics::RendererCallback::OnSetCamera(class Graphics::Camera const &)
public: virtual void __thiscall Graphics::RendererCallback::OnSetParams(class ConfigParser *)
public: virtual void __thiscall Graphics::RendererCallback::OnSetRenderTarget(class Graphics::Texture *,class Graphics::Texture *)
public: virtual void __thiscall Graphics::RendererCallback::OnUninitialize(void)
public: virtual void __thiscall Graphics::RendererCallback::OnUpdate(void)
public: virtual bool __thiscall Graphics::BillboardNode::Parse(class Graphics::ModelInstance *,class Graphics::ModelParser *,class Position3 const &,class HeapVector<class Graphics::VolumeEffect *> *)
public: virtual void __thiscall Graphics::DefModel::Parse(class Graphics::ModelInstance &,class Graphics::ModelParser &,class Position3 const &,class HeapVector<class Graphics::VolumeEffect *> *)
public: virtual bool __thiscall Graphics::FastNopNode::Parse(class Graphics::ModelInstance *,class Graphics::ModelParser *,class Position3 const &,class HeapVector<class Graphics::VolumeEffect *> *)
public: virtual bool __thiscall Graphics::GeometryNode::Parse(class Graphics::ModelInstance *,class Graphics::ModelParser *,class Position3 const &,class HeapVector<class Graphics::VolumeEffect *> *)
public: virtual bool __thiscall Graphics::HelperNode::Parse(class Graphics::ModelInstance *,class Graphics::ModelParser *,class Position3 const &,class HeapVector<class Graphics::VolumeEffect *> *)
public: virtual void __thiscall Graphics::LOD_Model::Parse(class Graphics::ModelInstance &,class Graphics::ModelParser &,class Position3 const &,class HeapVector<class Graphics::VolumeEffect *> *)
public: virtual bool __thiscall Graphics::LodModelNode::Parse(class Graphics::ModelInstance *,class Graphics::ModelParser *,class Position3 const &,class HeapVector<class Graphics::VolumeEffect *> *)
public: virtual bool __thiscall Graphics::ModelNode::Parse(class Graphics::ModelInstance *,class Graphics::ModelParser *,class Position3 const &,class HeapVector<class Graphics::VolumeEffect *> *)
public: virtual bool __thiscall Graphics::SegmentNode::Parse(class Graphics::ModelInstance *,class Graphics::ModelParser *,class Position3 const &,class HeapVector<class Graphics::VolumeEffect *> *)
public: virtual bool __thiscall Graphics::SelectorNode::Parse(class Graphics::ModelInstance *,class Graphics::ModelParser *,class Position3 const &,class HeapVector<class Graphics::VolumeEffect *> *)
public: virtual bool __thiscall Graphics::TransformNode::Parse(class Graphics::ModelInstance *,class Graphics::ModelParser *,class Position3 const &,class HeapVector<class Graphics::VolumeEffect *> *)
protected: virtual class Graphics::ModelNode * __thiscall Graphics::CMD_Node::ParseCE(class Graphics::ModelNode *,class gDrawCommand *)
protected: virtual bool __thiscall Graphics::CMD_Node::ParseCMD(class Graphics::GeometryNode *,class gDrawCommand *)
protected: virtual class Graphics::ModelNode * __thiscall Graphics::CMD_Node::ParseCeNop(class Graphics::ModelNode *,struct kinematicsV *)
protected: virtual class Graphics::ModelNode * __thiscall Graphics::CMD_Node::ParseCeRot(class Graphics::ModelNode *,struct kinematicsV *)
protected: virtual class Graphics::ModelNode * __thiscall Graphics::CMD_Node::ParseCeSca(class Graphics::ModelNode *,struct kinematicsV *)
protected: virtual class Graphics::ModelNode * __thiscall Graphics::CMD_Node::ParseCeTra(class Graphics::ModelNode *,struct kinematicsV *)
protected: virtual bool __thiscall Graphics::CMD_Node::ParseGeometry(class Graphics::GeometryNode *,class gDrawCommand *)
protected: virtual bool __thiscall Graphics::CMD_Node::ParseLD(class Graphics::LodModelNode *,class gDrawCommand *)
protected: virtual bool __thiscall Graphics::CMD_Node::ParseMaterial(class Graphics::GeometryNode *,class gDrawCommand *)
protected: virtual bool __thiscall Graphics::CMD_Node::ParseSC(class Graphics::ModelNode *,class gDrawCommand *)
public: void __thiscall Graphics::RenderObject::Prepare(void)
public: enum Graphics::ModelParsePurpose __thiscall Graphics::ModelParser::Purpose(void)
public: virtual class Graphics::CustomGeometry * __thiscall Graphics::Geometry::QueryCustomGeometry(void)
public: virtual class Graphics::CustomMaterial * __thiscall Graphics::Material::QueryCustomMaterial(void)
public: virtual class Graphics::Fog * __thiscall Graphics::VolumeEffect::QueryFogInterface(void)
public: virtual class Graphics::Light * __thiscall Graphics::VolumeEffect::QueryLightInterface(void)
public: virtual class Graphics::IMatEditor * __thiscall Graphics::Material::QueryMatEditor(void)
public: bool __thiscall Graphics::FileModelNode::ReadFromMemory(void *,unsigned int &,unsigned int)
public: virtual void __thiscall Resource::Refresh(void)
public: virtual void __thiscall Resource::Register(void)
private: void __thiscall Graphics::ModelNode::RemoveChild(class Graphics::ModelNode *)
public: virtual bool __thiscall Graphics::GeometryNode::Render(class Graphics::ModelInstance *,class Graphics::RenderParser *,class Position3 const &,class HeapVector<class Graphics::VolumeEffect *> *)
public: virtual bool __thiscall Graphics::MultiMaterialNode::Render(class Graphics::ModelInstance *,class Graphics::RenderParser *,class Position3 const &,class HeapVector<class Graphics::VolumeEffect *> *)
public: virtual void __thiscall Graphics::DefModel::ReplaceMaterial(class Graphics::Material *,class Graphics::Material *)
public: virtual void __thiscall Graphics::GeometryNode::ReplaceMaterial(class Graphics::Material *,class Graphics::Material *)
public: virtual void __thiscall Graphics::ModelNode::ReplaceMaterial(class Graphics::Material *,class Graphics::Material *)
public: void __thiscall Graphics::Material::ResetFlags(unsigned int)
public: void __thiscall Graphics::ModelNode::ResetPurpose(enum Graphics::ModelParsePurpose)
public: bool __thiscall Graphics::CMD_Node::SaveToCMD(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: bool __thiscall Graphics::FileModelNode::SaveToFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: void __thiscall Graphics::SegmentNode::SetA(class Vector3 const &)
public: void __thiscall Graphics::FastNopNode::SetActiveSegment(float,float,int)
public: virtual void __thiscall Graphics::CustomMaterial::SetAmbientColor(class Vector3 const &)
public: virtual void __thiscall Graphics::CustomMaterial::SetAmbientMap(class Graphics::Texture *)
public: void __thiscall Graphics::SegmentNode::SetB(class Vector3 const &)
public: void __thiscall Graphics::BillboardNode::SetBillboardAxis(enum Graphics::BillboardAxis)
public: void __thiscall Graphics::BillboardNode::SetBillboardType(enum Graphics::BillboardType)
public: virtual void __thiscall Graphics::CustomMaterial::SetCubeMap(class Graphics::Texture *)
public: virtual void __thiscall Graphics::CustomMaterial::SetDiffuseColor(class Vector3 const &)
public: virtual void __thiscall Graphics::CustomMaterial::SetDiffuseMap(int,class Graphics::Texture *)
public: static void __cdecl Graphics::LodModelNode::SetDistanceMultiplier(float)
public: void __thiscall Graphics::EffectNode::SetEffectClass(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: void __thiscall Graphics::EffectNode::SetEffectTarget(enum Graphics::EffectTarget)
public: void __thiscall Graphics::Material::SetFlags(unsigned int)
public: void __thiscall Graphics::Material::SetFlags(unsigned int,bool)
public: static void __cdecl Graphics::CMD_Node::SetForcedColors(class Vector3 *,class Vector3 *,class Vector3 *)
public: virtual void __thiscall Graphics::GeometryNode::SetGeomOffset(unsigned int,unsigned int)
public: void __thiscall Graphics::GeometryNode::SetGeometry(class Graphics::Geometry *)
public: static void __cdecl Graphics::CMD_Node::SetGeometryClass(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: virtual void __thiscall Graphics::CustomMaterial::SetGlossMap(class Graphics::Texture *)
public: static void __cdecl Graphics::CMD_Node::SetGlossiness(float)
public: virtual void __thiscall Graphics::CustomMaterial::SetGlossiness(float)
public: virtual void __thiscall Graphics::CustomMaterial::SetLighted(bool)
public: void __thiscall Graphics::LOD_Model::SetLodDescriptions(class ConfigParser::iterator const &,class Graphics::ModelManager *)
public: void __thiscall Graphics::LodModelNode::SetLodDistance(int,float)
public: void __thiscall Graphics::GeometryNode::SetMaterial(class Graphics::Material *)
public: void __thiscall Graphics::MultiMaterialNode::SetMaterial(int,class Graphics::Material *)
public: static void __cdecl Graphics::CMD_Node::SetMaterialClass(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: void __thiscall Graphics::ModelNode::SetName(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: virtual void __thiscall Resource::SetName(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: void __thiscall Graphics::ModelNode::SetNodePurposes(enum Graphics::ModelParsePurpose)
public: virtual void __thiscall Graphics::CustomMaterial::SetNormalMap(class Graphics::Texture *)
public: virtual void __thiscall Graphics::CustomMaterial::SetOpacity(float)
public: virtual void __thiscall Graphics::Animation<int>::SetParamIndex(int)
public: virtual void __thiscall Graphics::Animation<float>::SetParamIndex(int)
public: virtual void __thiscall Graphics::Animation<class Quaternion>::SetParamIndex(int)
public: virtual void __thiscall Graphics::Animation<class Vector3>::SetParamIndex(int)
public: virtual void __thiscall Graphics::CustomMaterial::SetRadianceColor(class Vector3 const &)
public: virtual void __thiscall Graphics::CustomMaterial::SetRadianceMap(class Graphics::Texture *)
void __cdecl SetResourceReference(class Resource *,class Resource *)
void __cdecl SetResourceReference(enum ResourceType,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: virtual void __thiscall Graphics::CustomMaterial::SetSpecularColor(class Vector3 const &)
public: virtual void __thiscall Graphics::CustomMaterial::SetSpecularColorMap(class Graphics::Texture *)
public: virtual void __thiscall Graphics::CustomMaterial::SetSpecularLevelMap(class Graphics::Texture *)
public: void __thiscall Graphics::TransformNode::SetStaticTransform(class Position3 const &)
public: void __thiscall Graphics::HelperNode::SetSubmodelName(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)
public: virtual void __thiscall Graphics::CustomMaterial::SetTransparencyMap(class Graphics::Texture *)
public: virtual void __thiscall Graphics::CustomMaterial::SetTwoSided(bool)
public: void __thiscall Graphics::SelectorNode::SetUseAll(bool)
public: void __thiscall Graphics::UserBoxNode::SetUserBox(class Box const &)
public: virtual void __thiscall Graphics::CustomMaterial::SetWireframe(bool)
public: virtual enum ResourceType __thiscall Resource::Type(void)
public: virtual void __thiscall Resource::Unregister(void)
public: bool __thiscall Graphics::EffectNode::UpdateEffect(class Graphics::VolumeEffect *,class Graphics::ModelInstance &)
public: class Graphics::TransformNode * __thiscall Graphics::TransformNode::UpdateParentTransform(void)
public: void __thiscall Graphics::ModelNode::UpdatePurpose(void)
public: virtual void __thiscall Resource::UsedThisFrame(void)
public: bool __thiscall Graphics::FileModelNode::WriteToMemory(void *,unsigned int &,unsigned int)
protected: static class Vector3 * Graphics::CMD_Node::c_amb
protected: static class Vector3 * Graphics::CMD_Node::c_diff
protected: static class Vector3 * Graphics::CMD_Node::c_spec
public: static class Graphics::RenderObject * __cdecl Graphics::RenderObject::create(bool)
private: void __thiscall FrameMemoryHeap::create_pool(int)
class FrameMemoryHeap frame_heap
public: void __thiscall FrameMemoryHeap::free_memory(void *,unsigned int)
protected: static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > Graphics::CMD_Node::geomClass
public: class ClipVolume * __thiscall Graphics::Camera::getClipVolume(void)const 
private: struct FrameMemoryHeap::free_chunk * __thiscall FrameMemoryHeap::get_chunk(void *,int)
private: void * __thiscall FrameMemoryHeap::get_from_pool(unsigned int)
public: int __thiscall FrameMemoryHeap::get_max_memory(void)
public: void * __thiscall FrameMemoryHeap::get_memory(unsigned int)
protected: static float Graphics::CMD_Node::glossiness
class Graphics::RenderParser * immediateParser
public: virtual bool __thiscall DefResourceManager::initialize(void)
public: virtual bool __thiscall Graphics::ModelManager::initialize(void)
public: virtual bool __thiscall Plugin::initialize(void)
public: bool __thiscall Graphics::AnimTransformNode::isMoveAnimated(void)
public: bool __thiscall Graphics::AnimTransformNode::isRotateAnimated(void)
public: bool __thiscall Graphics::AnimTransformNode::isScaleAnimated(void)
public: bool __thiscall Graphics::AnimTransformNode::isScaleOrientAnimated(void)
protected: static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > Graphics::CMD_Node::matClass
private: void __thiscall FrameMemoryHeap::move_left(struct FrameMemoryHeap::free_chunk *)
private: void __thiscall FrameMemoryHeap::move_right(struct FrameMemoryHeap::free_chunk *)
protected: static float Graphics::LodModelNode::multSq
public: void * __thiscall FrameMemoryHeap::quick_get_memory(unsigned int)
public: void __thiscall FrameMemoryHeap::release_memory(void)
private: struct FrameMemoryHeap::free_chunk * __thiscall FrameMemoryHeap::remove_chunk(struct FrameMemoryHeap::free_chunk *)
class Graphics::Renderer * renderer
public: void __thiscall FrameMemoryHeap::reset_memory(void)
class ResourceManager * resourcer
public: virtual void __thiscall Graphics::Animation<int>::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::Animation<float>::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::Animation<class Quaternion>::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::Animation<class Vector3>::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::AnimTransformNode::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::BillboardNode::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::CMD_Node::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::CustomMaterial::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::DefModel::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::EffectNode::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::FastNopNode::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::FileModelNode::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::GeometryNode::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::HelperNode::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::LodModelNode::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::ModelNode::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::MultiMaterialNode::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Resource::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::SegmentNode::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::SelectorNode::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::TransformNode::serialize(class EagleDynamics::Common::Serializer &)
public: virtual void __thiscall Graphics::UserBoxNode::serialize(class EagleDynamics::Common::Serializer &)
public: static void __cdecl Graphics::CMD_Node::setLandTextureMode(bool)
public: virtual void __thiscall DefResourceManager::uninitialize(void)
public: virtual void __thiscall Graphics::ModelManager::uninitialize(void)
public: virtual void __thiscall Plugin::uninitialize(void)
