#ifndef LLANDSCAPEIMPL_H_
#define LLANDSCAPEIMPL_H_

class lLandscapeImpl
{
public: __thiscall lLandscapeImpl::lLandscapeImpl(class lLandscapeImpl const &)
public: __thiscall lLandscapeImpl::lLandscapeImpl(void)
public: __thiscall lLandscapeImpl::~lLandscapeImpl(void)
public: class lLandscapeImpl & __thiscall lLandscapeImpl::operator=(class lLandscapeImpl const &)
public: class nl::lRegion * __thiscall lLandscapeImpl::getRegion(struct intpoint)
public: class nl::lSquare * __thiscall lLandscapeImpl::getSquare(struct intpoint)
public: virtual bool __thiscall lLandscapeImpl::InitSurface(void)
public: virtual bool __thiscall lLandscapeImpl::IsOnAirfield(float,float)
public: virtual bool __thiscall lLandscapeImpl::IsOnLake(float,float)
public: virtual bool __thiscall lLandscapeImpl::IsOnRail(float,float)
public: virtual bool __thiscall lLandscapeImpl::IsOnRiver(float,float)
public: virtual bool __thiscall lLandscapeImpl::IsOnRoad(float,float)
public: virtual bool __thiscall lLandscapeImpl::WhereNearestGroundObject(class E3::Vector &,class E3::Vector &)
public: virtual bool __thiscall lLandscapeImpl::isVisible(class E3::Vector &,class E3::Vector &)
public: virtual class E3::Vector * __thiscall lLandscapeImpl::SegmentGroundIntersection(class E3::Vector,class E3::Vector,class E3::Vector &)
public: virtual class E3::Vector * __thiscall lLandscapeImpl::VectorGroundIntersection(class E3::Vector &,class E3::Vector &,float,class E3::Vector &)
public: virtual class E3::Vector * __thiscall lLandscapeImpl::groundIntersection(class E3::Vector &,class E3::Vector &)
public: virtual class lLandObject * __thiscall lLandscapeImpl::NearestGroundObject(class E3::Vector &,class E3::Vector &,float,float)
public: virtual class landscape::lSurface::lRegion * __thiscall lLandscapeImpl::CreateLRegion(void)
public: virtual class landscape::lSurface::lShape * __thiscall lLandscapeImpl::CreateLShape(void)
public: virtual class landscape::lSurface::lSquare * __thiscall lLandscapeImpl::CreateLSquare(void)
public: virtual double __thiscall lLandscapeImpl::GetXMax(void)
public: virtual double __thiscall lLandscapeImpl::GetXMin(void)
public: virtual double __thiscall lLandscapeImpl::GetZMax(void)
public: virtual double __thiscall lLandscapeImpl::GetZMin(void)
public: virtual float __thiscall lLandscapeImpl::heightBox(float,float)
public: virtual float __thiscall lLandscapeImpl::heightSurface(float,float)
public: virtual int __thiscall lLandscapeImpl::Envelope(class E3::Vector &,class E3::Vector &,class E3::Vector *,int)
public: virtual int __thiscall lLandscapeImpl::EnvelopeNew(class E3::Vector &,class E3::Vector &,class E3::Vector *,int,int)
public: virtual int __thiscall lLandscapeImpl::GetObjects(class E3::Vector &,class E3::Vector &,class lLandObject * *,int,bool)
public: virtual int __thiscall lLandscapeImpl::GetObjects(float,float,float,float,class lLandObject * *,int,bool,unsigned int)
public: virtual int __thiscall lLandscapeImpl::GetWObjects(class E3::Vector &,float,class cPointerTemplate<class MovingObject> *,int,unsigned int)
public: virtual int __thiscall lLandscapeImpl::Init(void)
public: virtual int __thiscall lLandscapeImpl::InitScenes(void)
public: virtual int __thiscall lLandscapeImpl::Restore(struct _iobuf *,bool,int)
public: virtual int __thiscall lLandscapeImpl::Save(struct _iobuf *,bool)
public: virtual int __thiscall lLandscapeImpl::surfaceTriangle(float,float,class E3::Vector &,class E3::Vector &,class E3::Vector &,class E3::Vector &,class E3::Vector &)
public: virtual struct SemanticDef * __thiscall lLandscapeImpl::GetSemanticDecl(char const *)
public: virtual struct nl::airdromeshape * __thiscall lLandscapeImpl::GetAirdromeDecl(int)
public: virtual struct nl::airdromeshape * __thiscall lLandscapeImpl::GetAirdromeDecl(struct intpoint)
public: virtual unsigned long __thiscall lLandscapeImpl::surfType(float,float)
public: virtual void __thiscall lLandscapeImpl::CleanScenes(void)
public: virtual void __thiscall lLandscapeImpl::ClearScenes(void)
public: virtual void __thiscall lLandscapeImpl::ClusterExplosion(class cPosition *,float,bool,bool,bool,bool,class cPointerTemplate<class MovingObject>,float,float,int,bool,bool)
public: virtual void __thiscall lLandscapeImpl::CoordFromGeographic(double,double,float &,float &)
public: virtual void __thiscall lLandscapeImpl::CoordToGeographic(float,float,double &,double &)
public: virtual void __thiscall lLandscapeImpl::Explosion(class E3::Vector *,float)
public: virtual void __thiscall lLandscapeImpl::Explosion(class cPosition *,float,int,int,bool,bool,bool,bool,class cPointerTemplate<class MovingObject>,bool,bool)
public: virtual void __thiscall lLandscapeImpl::Explosion(class cPosition *,float,int,int,int,bool,int,bool,bool,bool,class cPointerTemplate<class MovingObject>,bool,void *,int)
public: virtual void __thiscall lLandscapeImpl::Finish(void)
public: virtual void __thiscall lLandscapeImpl::InitOptions(void)
public: virtual void __thiscall lLandscapeImpl::LoadOnDemand(struct intpoint,int,bool)
public: virtual void __thiscall lLandscapeImpl::NapalmExplosion(class cPosition *,float,float,bool,bool,bool,class cPointerTemplate<class MovingObject>,bool)
public: virtual void __thiscall lLandscapeImpl::NextTime(float)
public: virtual void __thiscall lLandscapeImpl::ObjectExplosion(class lLandObject &,float,bool,bool,class cPointerTemplate<class MovingObject>)
public: virtual void __thiscall lLandscapeImpl::OilExplosion(class cPosition *,float,bool,bool,bool,class cPointerTemplate<class MovingObject>,bool,unsigned long)
public: virtual void __thiscall lLandscapeImpl::ProjectXandZonFacetPlane(class cPosition &)
public: virtual void __thiscall lLandscapeImpl::ProjectXandZonFacetPlane(class cPosition &,class E3::Vector const *)
public: virtual void __thiscall lLandscapeImpl::RotateAroundSmallerAxis(class cPosition &,int,int)
public: virtual void __thiscall lLandscapeImpl::SetAirfieldLights(int,bool)
public: virtual void __thiscall lLandscapeImpl::SetCommand(int)
public: virtual void __thiscall lLandscapeImpl::Start(void)
public: virtual void __thiscall lLandscapeImpl::Stop(void)
public: virtual void __thiscall lLandscapeImpl::VolumeExplosion(class cPosition *,float,bool,bool,bool,class cPointerTemplate<class MovingObject>,bool)
const lLandscapeImpl::`vftable'{for `lLandscape'}
const lLandscapeImpl::`vftable'{for `landscape::lSurfaceDataManager'}

public: static class lLandscapeImpl * lLandscapeImpl::land
};

#endif

