 The information information of 'C:\FlightDream\Debug\Tools\ExeInfo\lockon\edTerrain.dll' is:
--------------------------------------------------------
Export symbols:
---------------------------------------------
	CHARACTERISTICS                   0x00000000
	TIME DATE STAMP                   0x3faa869c    Thu Nov 06 09:36:28 2003
	MAJOR VERSION                     0x0000
	MINOR VERSION                     0x0000
	NAME                              0x0008fd96    'edTerrain.dll'
	BASE                              0x00000001
	NUMBER OF FUNCTIONS               811
	NUMBER OF NAMES                   811
	ADDRESS OF FUNCTIONS              0x0008dde8
	ADDRESS OF NAMES                  0x0008ea94
	ADDRESS OF NAME ORDINALS          0x0008f740
`string'
`string'
class E3::Vector __cdecl GetRegionPosition(struct intpoint)
class E3::Vector __cdecl GetSquarePosition(struct intpoint)
class ILandTexturesFile * __cdecl CreateLandTexturesFile(void)
class ObjectTypeLoadManager * __cdecl CreateObjectTypeLoadManager(class landscape_old::lSurface *,char const *,char const *,char const *)
class lLandRoadManager * __cdecl CreateLandRoadManager(void)
class lTerraDispatch * __cdecl CreateTerraDispatch(void)
class lTerraDispatch * __cdecl GetTerraDispatch(void)
class landscape::lSurface * __cdecl landscape::CreateLandSurface(void)
class landscape::lSurface * __cdecl landscape::GetLandSurface(void)
class landscape_old::lSurface * __cdecl landscape_old::CreateLandSurface(void)
class landscape_old::lSurface * __cdecl landscape_old::GetLandSurface(void)
class onlay2::OnLayFile * __cdecl onlay2::CreateOnLayFile(void)
class path::PathNetwork * __cdecl path::CreatePathNetwork(void)
const LandTexturesFile::`vftable'
const RoadnetworkFile::`vftable'
const SceneFile::`vftable'
const lLandRoadManagerImpl::`vftable'
const landscape::lSurface::`vftable'
const landscape::lSurface::lRegion::`vftable'
const landscape::lSurface::lShape::`vftable'
const landscape::lSurface::lSquare::`vftable'
const landscape::lSurfaceDataManager::`vftable'
const landscape::lSurfaceImpl::`vftable'
const landscape_old::lSurfaceImpl::`vftable'
const onlay2::OnLayFile::`vftable'
const onlay2::OnLayFileImpl::`vftable'
const path::Cross::`vftable'
const path::Path::`vftable'
const path::PathNetwork::`vftable'
int __cdecl GetLevelSize(int)
int __cdecl GetSemanticPrior(int)
int __cdecl GetSemanticType(char const *)
int __cdecl fnEdTerrain(void)
int nEdTerrain
private: void __thiscall landscape::lPointOnSurface::CheckSquare(void)
private: void __thiscall landscape::lPointOnSurface::FindFace(void)
private: void __thiscall landscape::lPointOnSurface::GetMath(void)
private: void __thiscall landscape::lPointOnSurface::Invalid(void)
private: void __thiscall landscape_old::lPointOnSurface::CheckSquare(void)
private: void __thiscall landscape_old::lPointOnSurface::FindFace(void)
private: void __thiscall landscape_old::lPointOnSurface::GetMath(void)
private: void __thiscall landscape_old::lPointOnSurface::Invalid(void)
protected: bool __thiscall material::MaterialAlias::RealMaterial::BuildString(struct material::Material *,char *,long,char *,class misc::vector<struct material::MaterialAlias::RealMaterial::ParameterPosition> &)
protected: void __thiscall roads::PointOnRoad::SetToLength(float)
protected: void __thiscall roads::lRoadFile::InitSquares(struct intpoint,struct intpoint,class misc::mmf_write &)
public: __thiscall CEdTerrain::CEdTerrain(void)
public: __thiscall LandAreaFile::LandAreaFile(class LandAreaFile const &)
public: __thiscall LandAreaFile::LandAreaFile(void)
public: __thiscall LandAreaFile::~LandAreaFile(void)
public: __thiscall LandSquareFile::LandSquareFile(class LandSquareFile const &)
public: __thiscall LandSquareFile::LandSquareFile(void)
public: __thiscall LandSquareFile::~LandSquareFile(void)
public: __thiscall LandTexturesFile::LandTexturesFile(class LandTexturesFile const &)
public: __thiscall LandTexturesFile::LandTexturesFile(void)
public: __thiscall LandTexturesFile::~LandTexturesFile(void)
public: __thiscall OnLayFile::OnLayFile(class OnLayFile const &)
public: __thiscall OnLayFile::OnLayFile(void)
public: __thiscall OnLayFile::~OnLayFile(void)
public: __thiscall RoadnetworkFile::RoadnetworkFile(class RoadnetworkFile const &)
public: __thiscall RoadnetworkFile::RoadnetworkFile(void)
public: __thiscall RoadnetworkFile::~RoadnetworkFile(void)
public: __thiscall SceneFile::SceneFile(class SceneFile const &)
public: __thiscall SceneFile::SceneFile(void)
public: __thiscall SceneFile::~SceneFile(void)
public: __thiscall SceneFileManager::SceneFileManager(class SceneFileManager const &)
public: __thiscall SceneFileManager::SceneFileManager(void)
public: __thiscall SceneFileManager::~SceneFileManager(void)
public: __thiscall TexFileHeader::texture::texture(void)
public: __thiscall cdds::File::File(struct cdds::File const &)
public: __thiscall cdds::File::File(void)
public: __thiscall cdds::File::~File(void)
public: __thiscall cdds::Item::Item(char const *,int,bool)
public: __thiscall cdds::Item::Item(struct cdds::Item const &)
public: __thiscall cdds::Item::Item(void)
public: __thiscall cdds::Surface::Surface(struct cdds::Surface const &)
public: __thiscall cdds::Surface::Surface(void)
public: __thiscall cdds::Texture::Texture(struct IDirect3DTexture8 *,long,class misc::mmf_write &)
public: __thiscall cdds::Texture::Texture(struct cdds::Texture const &)
public: __thiscall cdds::Texture::~Texture(void)
public: __thiscall geometry::GeometryItem::GeometryItem(struct geometry::GeometrySource *,unsigned long,unsigned long,unsigned long,unsigned long,struct material::Material *)
public: __thiscall geometry::GeometryItem::GeometryItem(void)
public: __thiscall geometry::GeometrySource::GeometrySource(struct geometry::GeometryItem &,class misc::mmf_write &)
public: __thiscall geometry::GeometrySource::GeometrySource(struct geometry::GeometrySource &,class misc::mmf_write &)
public: __thiscall geometry::GeometrySource::GeometrySource(void)
public: __thiscall geometry::GeometrySource::~GeometrySource(void)
public: __thiscall lCmdFile::lCmdFile(class lCmdFile const &)
public: __thiscall lCmdFile::lCmdFile(void)
public: __thiscall lCmdFile::~lCmdFile(void)
public: __thiscall lCmdFileHeader::ObjectName::ObjectName(struct lCmdFileHeader::ObjectName const &)
public: __thiscall lCmdFileHeader::ObjectName::ObjectName(void)
public: __thiscall lCmdFileHeader::ObjectShape::ObjectShape(struct lCmdFileHeader::ObjectShape const &)
public: __thiscall lCmdFileHeader::ObjectShape::ObjectShape(void)
public: __thiscall lCmdFileHeader::TextureName::TextureName(void)
public: __thiscall lCmdFileHeader::lCmdFileHeader(struct lCmdFileHeader const &)
public: __thiscall lCmdFileHeader::lCmdFileHeader(void)
public: __thiscall lLandRoadManager::RoadSquare::RoadSquare(class lLandRoadManager::RoadSquare const &)
public: __thiscall lLandRoadManager::RoadSquare::RoadSquare(void)
public: __thiscall lLandRoadManager::RoadSquare::~RoadSquare(void)
public: __thiscall lLandRoadManagerImpl::lLandRoadManagerImpl(class lLandRoadManagerImpl const &)
public: __thiscall lLandRoadManagerImpl::lLandRoadManagerImpl(void)
public: __thiscall lLandRoadManagerImpl::~lLandRoadManagerImpl(void)
public: __thiscall lOnLayManager2::lOnLayManager2(class lOnLayManager2 const &)
public: __thiscall lOnLayManager2::lOnLayManager2(void)
public: __thiscall lOnLayManager2::onlaysemstruct::onlaysemstruct(struct lOnLayManager2::onlaysemstruct const &)
public: __thiscall lOnLayManager2::onlaysemstruct::onlaysemstruct(void)
public: __thiscall lOnLayManager2::onlaysemstruct::~onlaysemstruct(void)
public: __thiscall lOnLayManager2::onlaytexstruct::onlaytexstruct(struct lOnLayManager2::onlaytexstruct const &)
public: __thiscall lOnLayManager2::onlaytexstruct::onlaytexstruct(void)
public: __thiscall lOnLayManager2::onlaytexstruct::~onlaytexstruct(void)
public: __thiscall lOnLayManager2::~lOnLayManager2(void)
public: __thiscall lOnLayManager::lOnLayManager(class lOnLayManager const &)
public: __thiscall lOnLayManager::lOnLayManager(void)
public: __thiscall lOnLayManager::~lOnLayManager(void)
public: __thiscall lSemanticSquare::lSemanticSquare(void)
public: __thiscall landscape::Square::Square(struct landscape::Square const &)
public: __thiscall landscape::Square::Square(void)
public: __thiscall landscape::Square::~Square(void)
public: __thiscall landscape::lPointOnSurface::lPointOnSurface(class landscape::lPointOnSurface const &)
public: __thiscall landscape::lPointOnSurface::lPointOnSurface(void)
public: __thiscall landscape::lPointOnSurface::operator class E3::Vector const &(void)
public: __thiscall landscape::lSurface::lRegion::lRegion(class landscape::lSurface::lRegion const &)
public: __thiscall landscape::lSurface::lRegion::lRegion(void)
public: __thiscall landscape::lSurface::lShape::lShape(class landscape::lSurface::lShape const &)
public: __thiscall landscape::lSurface::lShape::lShape(void)
public: __thiscall landscape::lSurface::lSquare::lSquare(class landscape::lSurface::lSquare const &)
public: __thiscall landscape::lSurface::lSquare::lSquare(void)
public: __thiscall landscape::lSurface::lSurface(class landscape::lSurface const &)
public: __thiscall landscape::lSurface::lSurface(void)
public: __thiscall landscape::lSurfaceDataManager::lSurfaceDataManager(class landscape::lSurfaceDataManager const &)
public: __thiscall landscape::lSurfaceDataManager::lSurfaceDataManager(void)
public: __thiscall landscape::lSurfaceFile::lSurfaceFile(struct landscape::lSurfaceFile const &)
public: __thiscall landscape::lSurfaceFile::lSurfaceFile(void)
public: __thiscall landscape::lSurfaceFile::~lSurfaceFile(void)
public: __thiscall landscape::lSurfaceImpl::lSurfaceImpl(class landscape::lSurfaceImpl const &)
public: __thiscall landscape::lSurfaceImpl::lSurfaceImpl(void)
public: __thiscall landscape_old::LandscapeSquareSection::Square::Square(struct landscape_old::LandscapeSquareSection::Square const &)
public: __thiscall landscape_old::LandscapeSquareSection::Square::Square(void)
public: __thiscall landscape_old::lPointOnSurface::lPointOnSurface(class landscape_old::lPointOnSurface const &)
public: __thiscall landscape_old::lPointOnSurface::lPointOnSurface(class landscape_old::lSurface *)
public: __thiscall landscape_old::lPointOnSurface::lPointOnSurface(void)
public: __thiscall landscape_old::lPointOnSurface::operator class E3::Vector const &(void)
public: __thiscall landscape_old::lSurfaceImpl::lSurfaceImpl(class landscape_old::lSurfaceImpl const &)
public: __thiscall landscape_old::lSurfaceImpl::lSurfaceImpl(void)
public: __thiscall material::Material::Material(char *,char *)
public: __thiscall material::Material::Material(struct material::Material const &)
public: __thiscall material::Material::Material(void)
public: __thiscall material::Material::~Material(void)
public: __thiscall material::MaterialAlias::MaterialAlias(struct material::MaterialAlias const &)
public: __thiscall material::MaterialAlias::MaterialAlias(void)
public: __thiscall material::MaterialAlias::RealMaterial::RealMaterial(struct material::MaterialAlias::RealMaterial const &)
public: __thiscall material::MaterialAlias::RealMaterial::RealMaterial(void)
public: __thiscall material::MaterialAlias::RealMaterial::~RealMaterial(void)
public: __thiscall material::MaterialAlias::~MaterialAlias(void)
public: __thiscall material::MaterialAliasFile::MaterialAliasFile(struct material::MaterialAliasFile const &)
public: __thiscall material::MaterialAliasFile::MaterialAliasFile(void)
public: __thiscall material::MaterialAliasFile::~MaterialAliasFile(void)
public: __thiscall onlay2::OnLayFile::OnLayFile(class onlay2::OnLayFile const &)
public: __thiscall onlay2::OnLayFile::OnLayFile(void)
public: __thiscall onlay2::OnLayFileImpl::OnLayFileImpl(class onlay2::OnLayFileImpl const &)
public: __thiscall onlay2::OnLayFileImpl::OnLayFileImpl(void)
public: __thiscall onlay2::OnLayFileImpl::~OnLayFileImpl(void)
public: __thiscall path::Cross::Cross(class path::Cross const &)
public: __thiscall path::Cross::Cross(void)
public: __thiscall path::Path::Path(class path::Path const &)
public: __thiscall path::Path::Path(void)
public: __thiscall path::PathNetwork::PathNetwork(class path::PathNetwork const &)
public: __thiscall path::PathNetwork::PathNetwork(void)
public: __thiscall path::PointOnPath::PointOnPath(class path::PointOnPath const &)
public: __thiscall path::PointOnPath::PointOnPath(void)
public: __thiscall roads::Crossroad::Crossroad(struct roads::Crossroad const &)
public: __thiscall roads::Crossroad::Crossroad(void)
public: __thiscall roads::Crossroad::~Crossroad(void)
public: __thiscall roads::CrossroadType::CrossAngle::CrossAngle(struct roads::CrossroadType::CrossAngle const &)
public: __thiscall roads::CrossroadType::CrossAngle::CrossAngle(void)
public: __thiscall roads::CrossroadType::CrossroadType(struct roads::CrossroadType const &)
public: __thiscall roads::CrossroadType::CrossroadType(void)
public: __thiscall roads::CrossroadType::~CrossroadType(void)
public: __thiscall roads::CrossroadTypeFile::CrossroadTypeFile(struct roads::CrossroadTypeFile const &)
public: __thiscall roads::CrossroadTypeFile::CrossroadTypeFile(void)
public: __thiscall roads::CrossroadTypeFile::~CrossroadTypeFile(void)
public: __thiscall roads::PointOnRoad::PointOnRoad(struct roads::PointOnRoad const &)
public: __thiscall roads::PointOnRoad::PointOnRoad(struct roads::PointOnRoad const &,float)
public: __thiscall roads::PointOnRoad::PointOnRoad(struct roads::Road *,float)
public: __thiscall roads::PointOnRoad::PointOnRoad(struct roads::Road *,unsigned short,float)
public: __thiscall roads::PointOnRoad::PointOnRoad(void)
public: __thiscall roads::PointOnRoadH::PointOnRoadH(class roads::PointOnRoadH const &)
public: __thiscall roads::PointOnRoadH::PointOnRoadH(class roads::PointOnRoadH const &,float)
public: __thiscall roads::PointOnRoadH::PointOnRoadH(struct roads::PointOnRoad const &)
public: __thiscall roads::PointOnRoadH::PointOnRoadH(struct roads::PointOnRoad const &,float)
public: __thiscall roads::PointOnRoadH::PointOnRoadH(void)
public: __thiscall roads::Road::Road(struct roads::Road const &)
public: __thiscall roads::Road::Road(void)
public: __thiscall roads::Road::~Road(void)
public: __thiscall roads::RoadAnchor::RoadAnchor(struct roads::RoadAnchor const &)
public: __thiscall roads::RoadAnchor::RoadAnchor(void)
public: __thiscall roads::RoadLink::RoadLink(struct roads::RoadLink const &)
public: __thiscall roads::RoadLink::RoadLink(void)
public: __thiscall roads::RoadLink::~RoadLink(void)
public: __thiscall roads::RoadSceneObject::RoadSceneObject(struct roads::RoadSceneObject const &)
public: __thiscall roads::RoadSceneObject::RoadSceneObject(void)
public: __thiscall roads::SceneObject::SceneObject(struct roads::SceneObject const &)
public: __thiscall roads::SceneObject::SceneObject(void)
public: __thiscall roads::Segment::Segment(class E3::Vector const &,class E3::Vector const &)
public: __thiscall roads::Segment::Segment(struct roads::Segment const &)
public: __thiscall roads::Segment::Segment(void)
public: __thiscall roads::Square::Square(struct roads::Square const &)
public: __thiscall roads::Square::Square(void)
public: __thiscall roads::Square::~Square(void)
public: __thiscall roads::lRoadFile::lRoadFile(enum roads::lRoadFile::road_type,char const *)
public: __thiscall roads::lRoadFile::lRoadFile(struct roads::lRoadFile const &)
public: __thiscall roads::lRoadFile::~lRoadFile(void)
public: __thiscall squareonlaysemanticlist::squareonlaysemanticlist(class squareonlaysemanticlist const &)
public: __thiscall squareonlaysemanticlist::squareonlaysemanticlist(void)
public: __thiscall squareonlaysemanticlist::~squareonlaysemanticlist(void)
public: __thiscall superficial::lSuperficial::lSuperficial(struct superficial::lSuperficial &,class misc::mmf_write &)
public: __thiscall superficial::lSuperficial::lSuperficial(void)
public: __thiscall superficial::lSuperficialFile::Source::Source(struct intpoint,unsigned long,unsigned long,struct geometry::GeometryItem *)
public: __thiscall superficial::lSuperficialFile::Source::Source(struct intpoint,unsigned long,unsigned long,struct geometry::GeometryItem *,class cPosition &,class misc::mmf_write &)
public: __thiscall superficial::lSuperficialFile::Source::Source(struct superficial::lSuperficialFile::Source const &)
public: __thiscall superficial::lSuperficialFile::Source::Source(void)
public: __thiscall superficial::lSuperficialFile::lSuperficialFile(void)
public: bool __thiscall LandAreaFile::ConvertToNewFormat(char const *)
public: bool __thiscall LandAreaFile::Open(char const *,struct _FILETIME &,bool)
public: bool __thiscall LandAreaFile::operator!(void)const 
public: bool __thiscall LandSquareFile::Open(char const *,bool)
public: bool __thiscall LandSquareFile::operator!(void)const 
public: bool __thiscall OnLayFile::Open(char const *)
public: bool __thiscall OnLayFile::operator!(void)const 
public: bool __thiscall RoadnetworkFile::ConvertToSuperficial(class std::list<struct lSuperficial *,class std::allocator<struct lSuperficial *> > &)
public: bool __thiscall RoadnetworkFile::ConvertToSuperficial2(class std::list<struct superficial::lSuperficialFile::Source,class std::allocator<struct superficial::lSuperficialFile::Source> > &,class misc::mmf_write &)
public: bool __thiscall RoadnetworkFile::Open(char const *)
public: bool __thiscall RoadnetworkFile::operator!(void)const 
public: bool __thiscall SceneFile::Open(char const *)
public: bool __thiscall SceneFile::operator!(void)const 
public: bool __thiscall SceneFileManager::Open(char const *)
public: bool __thiscall TexFileHeader::surface::SaveLevel(struct IDirect3DSurface8 *,class misc::mmf_write &)
public: bool __thiscall cdds::Surface::SaveLevel(struct IDirect3DSurface8 *,class misc::mmf_write &)
public: bool __thiscall geometry::GeometrySource::IsPointInside(float,float,int,int)
public: bool __thiscall lCmdFile::Open(char const *)
public: bool __thiscall lOnLayManager2::Open(char const *)
public: bool __thiscall lOnLayManager2::SaveToComplexOnLayFile(char const *)
public: bool __thiscall lOnLayManager2::SaveToSuperficialFile(char const *)
public: bool __thiscall lOnLayManager2::onlaysemstruct::empty(void)
public: bool __thiscall lOnLayManager::Open(char const *)
public: bool __thiscall lSemanticSquare::IsPointOn(int,class E3::Vector const &)
public: bool __thiscall lSemanticSquare::IsPointOn(int,class Vector3 const &)
public: bool __thiscall lSemanticSquare::IsPointOn(int,float,float)
public: bool __thiscall lSuperficialFile::BuildFile(class std::list<struct lSuperficial *,class std::allocator<struct lSuperficial *> > &,class misc::mmf_write &)
public: bool __thiscall landscape::Square::isInTrg(float,float,unsigned long)
public: bool __thiscall landscape::Square::match(struct landscape::Square &)
public: bool __thiscall landscape::Square::segmentFaceIntersect(class E3::Vector const &,class E3::Vector const &,unsigned long,class E3::Vector *)
public: bool __thiscall landscape::Square::segmentSquareIntersect(class E3::Vector const &,class E3::Vector const &,struct landscape::Square::FaceNeighbour::faceref &,class E3::Vector *)
public: bool __thiscall landscape::lPointOnSurface::IsOnRoad(void)
public: bool __thiscall landscape::lPointOnSurface::IsOnRunway(void)
public: bool __thiscall landscape::lPointOnSurface::IsOnWater(void)
public: bool __thiscall landscape::lPointOnSurface::IsShallowWater(void)
public: bool __thiscall landscape::lPointOnSurface::isTypeSurfaceWater(void)
public: bool __thiscall landscape::lSurfaceFile::IsSea(class Box const &)
public: bool __thiscall landscape_old::LandscapeSquareSection::Square::isInTrg(float,float,unsigned long)
public: bool __thiscall landscape_old::LandscapeSquareSection::Square::segmentFaceIntersect(class E3::Vector const &,class E3::Vector const &,unsigned long,class E3::Vector *)
public: bool __thiscall landscape_old::LandscapeSquareSection::Square::segmentSquareIntersect(class E3::Vector const &,class E3::Vector const &,struct landscape_old::LandscapeSquareSection::Square::FaceNeighbour::faceref &,class E3::Vector *)
public: bool __thiscall landscape_old::lPointOnSurface::IsOnWater(void)
public: bool __thiscall material::Material::operator!=(struct material::Material const &)const 
public: bool __thiscall material::Material::operator<(struct material::Material const &)const 
public: bool __thiscall material::Material::operator==(struct material::Material const &)const 
public: bool __thiscall material::MaterialAlias::RealMaterial::BuildGeometryString(struct material::Material *,void *,char *,long)
public: bool __thiscall material::MaterialAlias::RealMaterial::BuildMaterialString(struct material::Material *,char *,long)
public: bool __thiscall material::MaterialAlias::RealMaterial::FromString(char const *,class misc::mmf_write &,char *,class misc::vector<struct material::MaterialAlias::RealMaterial::ParameterPosition> &)
public: bool __thiscall material::MaterialAlias::RealMaterial::ToString(char *,long,char *,class misc::vector<struct material::MaterialAlias::RealMaterial::ParameterPosition> &)
public: bool __thiscall roads::CrossroadType::CheckType(enum roads::lRoadFile::road_type,struct roads::Crossroad &,float &,float &,int &)
public: bool __thiscall roads::PointOnRoad::isBridge(void)const 
public: bool __thiscall roads::PointOnRoad::isDiversion(void)const 
public: bool __thiscall roads::PointOnRoad::isOnPhysicalRoad(void)const 
public: bool __thiscall roads::PointOnRoad::isTown(void)const 
public: bool __thiscall roads::PointOnRoad::isTunnel(void)const 
public: bool __thiscall roads::PointOnRoad::isTunnelOrBridge(void)const 
public: bool __thiscall roads::PointOnRoad::operator!=(struct roads::PointOnRoad const &)const 
public: bool __thiscall roads::PointOnRoad::operator<(struct roads::PointOnRoad const &)const 
public: bool __thiscall roads::PointOnRoad::operator==(struct roads::PointOnRoad const &)const 
public: bool __thiscall roads::Road::Cut(struct roads::PointOnRoad const &,struct roads::PointOnRoad const &,struct roads::Road &)
public: bool __thiscall roads::Road::IsDegradateSegment(int,class E3::Vector *)
public: bool __thiscall roads::Road::IsPointOnRoad(class E3::Vector const &)const 
public: bool __thiscall roads::Road::MovePoint(int,class E3::Vector const &,float,bool)
public: bool __thiscall roads::Road::Offset(float)
public: bool __thiscall roads::Road::Serialize(char *,int,bool)
public: bool __thiscall roads::Road::equalType(struct roads::Road &)
public: bool __thiscall roads::Road::getPointByLength(float,class E3::Vector &)const 
public: bool __thiscall roads::Road::getPointByLength(float,struct roads::PointOnRoad &)const 
public: bool __thiscall roads::Road::getPointBySegParam(float,struct roads::PointOnRoad &)const 
public: bool __thiscall roads::Road::isDiversionAvailable(struct roads::PointOnRoad &,struct roads::PointOnRoad &)const 
public: bool __thiscall roads::Road::isOnPhysicalRoad(struct roads::PointOnRoad &,struct roads::PointOnRoad &)const 
public: bool __thiscall roads::Road::isValidRoad(void)const 
public: bool __thiscall roads::RoadAnchor::CheckType(unsigned long)
public: bool __thiscall roads::RoadAnchor::isEnd(void)const 
public: bool __thiscall roads::RoadAnchor::isStart(void)const 
public: bool __thiscall roads::RoadLink::IsInside(class E3::Vector const &)const 
public: bool __thiscall roads::Segment::BuildFillet(struct roads::Segment &,struct roads::Segment &,float)
public: bool __thiscall roads::Segment::ConvertSmallArc2Seg(void)
public: bool __thiscall roads::Segment::IsArc(void)const 
public: bool __thiscall roads::Segment::IsArcInverted(void)const 
public: bool __thiscall roads::Segment::IsDegradateSegment(void)
public: bool __thiscall roads::Segment::IsPointOnRoad(class E3::Vector const &,float)const 
public: bool __thiscall roads::Segment::Offset(float)
public: bool __thiscall roads::Segment::isBridge(void)const 
public: bool __thiscall roads::Segment::isMound(void)const 
public: bool __thiscall roads::Segment::isTown(void)const 
public: bool __thiscall roads::Segment::isTunnel(void)const 
public: bool __thiscall roads::Segment::isTunnelBridgeOrMound(void)const 
public: bool __thiscall roads::Segment::isTunnelOrBridge(void)const 
public: bool __thiscall roads::Square::IsPointOnRoad(class E3::Vector const &,struct roads::PointOnRoad *)const 
public: bool __thiscall roads::lRoadFile::IsPointOnRoad(class E3::Vector const &,struct roads::PointOnRoad *)const 
public: bool __thiscall superficial::lSemanticSquare::Test(float,float)
public: bool __thiscall superficial::lSuperficialFile::IsSemantic(char const *,class E3::Vector const &)
public: char * __thiscall cdds::Surface::getData(void)
public: char * __thiscall lCmdFile::getTexture(int)
public: char * __thiscall lCmdFileHeader::getTexture(int)
public: char const * __thiscall LandAreaFile::GetError(void)
public: char const * __thiscall LandSquareFile::GetError(void)
public: char const * __thiscall lCmdFile::GetError(void)
public: char const * __thiscall lCmdFile::GetObjectA(int)
public: char const * __thiscall landscape::Square::getFaceSemantic(int)
public: char const * __thiscall roads::Segment::getSegmentTexture(int,int)
public: char const * __thiscall squareonlaysemanticlist::getSemanticName(int)
public: class Box const & __thiscall roads::Road::getBox(void)const 
public: class CEdTerrain & __thiscall CEdTerrain::operator=(class CEdTerrain const &)
public: class E3::Vector & __thiscall roads::PointOnRoad::GetPoint(void)const 
public: class E3::Vector & __thiscall roads::PointOnRoad::getTangent(void)const 
public: class E3::Vector & __thiscall roads::Segment::getBsPoint(bool)
public: class E3::Vector & __thiscall roads::Segment::getPoint(bool)
public: class E3::Vector * __thiscall landscape::Square::getNorms(void)
public: class E3::Vector * __thiscall landscape::Square::getVrts(void)
public: class E3::Vector * __thiscall landscape_old::LandscapeSquareSection::Square::getNorms(void)
public: class E3::Vector * __thiscall landscape_old::LandscapeSquareSection::Square::getSourceNorms(void)
public: class E3::Vector * __thiscall landscape_old::LandscapeSquareSection::Square::getVrts(void)
public: class E3::Vector __thiscall landscape::lPointOnSurface::operator+(class E3::Vector const &)
public: class E3::Vector __thiscall landscape::lPointOnSurface::operator-(class E3::Vector const &)
public: class E3::Vector __thiscall landscape_old::LandscapeSquareSection::Square::getNorm(int,int)
public: class E3::Vector __thiscall landscape_old::LandscapeSquareSection::Square::getVert(int,int)
public: class E3::Vector __thiscall landscape_old::lPointOnSurface::operator+(class E3::Vector const &)
public: class E3::Vector __thiscall landscape_old::lPointOnSurface::operator-(class E3::Vector const &)
public: class E3::Vector __thiscall roads::CrossroadType::CrossAngle::getOutPoint(void)
public: class E3::Vector __thiscall roads::CrossroadType::CrossAngle::getOutTangent(void)
public: class E3::Vector __thiscall roads::PointOnRoad::getOffsetPoint(float)const 
public: class E3::Vector __thiscall roads::Road::getEndTangent(void)const 
public: class E3::Vector __thiscall roads::Road::getStartTangent(void)const 
public: class E3::Vector __thiscall roads::RoadAnchor::getPoint(void)const 
public: class E3::Vector __thiscall roads::RoadAnchor::getTangent(void)const 
public: class E3::Vector __thiscall roads::Segment::getEndTangent(void)const 
public: class E3::Vector __thiscall roads::Segment::getPointByParam(float)const 
public: class E3::Vector __thiscall roads::Segment::getStartTangent(void)const 
public: class E3::Vector __thiscall roads::Segment::getTangentByParam(float)const 
public: class E3::Vector const & __thiscall roads::Road::getEndPoint(void)const 
public: class E3::Vector const & __thiscall roads::Road::getPoint(int)const 
public: class E3::Vector const & __thiscall roads::Road::getStartPoint(void)const 
public: class E3::Vector const & __thiscall roads::Segment::MovePoint(bool,class E3::Vector const &,float)
public: class E3::Vector const & __thiscall roads::Segment::getEndPoint(void)const 
public: class E3::Vector const & __thiscall roads::Segment::getPoint(bool)const 
public: class E3::Vector const & __thiscall roads::Segment::getStartPoint(void)const 
public: class LandAreaFile & __thiscall LandAreaFile::operator=(class LandAreaFile const &)
public: class LandAreaFile & __thiscall landscape_old::lSurfaceImpl::GetLandAreaFile(void)
public: class LandSquareFile & __thiscall LandSquareFile::operator=(class LandSquareFile const &)
public: class LandSquareFile * __thiscall LandAreaFile::getLandSquareFile(int)
public: class LandTexturesFile & __thiscall LandTexturesFile::operator=(class LandTexturesFile const &)
public: class OnLayFile & __thiscall OnLayFile::operator=(class OnLayFile const &)
public: class RoadnetworkFile & __thiscall RoadnetworkFile::operator=(class RoadnetworkFile const &)
public: class SceneFile & __thiscall SceneFile::operator=(class SceneFile const &)
public: class SceneFileManager & __thiscall SceneFileManager::operator=(class SceneFileManager const &)
public: class lCmdFile & __thiscall lCmdFile::operator=(class lCmdFile const &)
public: class lLandRoadManager::RoadSquare & __thiscall lLandRoadManager::RoadSquare::operator=(class lLandRoadManager::RoadSquare const &)
public: class lLandRoadManagerImpl & __thiscall lLandRoadManagerImpl::operator=(class lLandRoadManagerImpl const &)
public: class lOnLayManager & __thiscall lOnLayManager::operator=(class lOnLayManager const &)
public: class lOnLayManager2 & __thiscall lOnLayManager2::operator=(class lOnLayManager2 const &)
public: class landscape::lPointOnSurface & __thiscall landscape::lPointOnSurface::operator+=(class E3::Vector const &)
public: class landscape::lPointOnSurface & __thiscall landscape::lPointOnSurface::operator-=(class E3::Vector const &)
public: class landscape::lPointOnSurface & __thiscall landscape::lPointOnSurface::operator=(class E3::Vector const &)
public: class landscape::lPointOnSurface & __thiscall landscape::lPointOnSurface::operator=(class landscape::lPointOnSurface const &)
public: class landscape::lSurface & __thiscall landscape::lSurface::operator=(class landscape::lSurface const &)
public: class landscape::lSurface::lRegion & __thiscall landscape::lSurface::lRegion::operator=(class landscape::lSurface::lRegion const &)
public: class landscape::lSurface::lRegion & __thiscall landscape::lSurfaceImpl::LoadRegion(struct intpoint)
public: class landscape::lSurface::lShape & __thiscall landscape::lSurface::lShape::operator=(class landscape::lSurface::lShape const &)
public: class landscape::lSurface::lShape & __thiscall landscape::lSurface::lSquare::getShape0(void)
public: class landscape::lSurface::lShape * __thiscall landscape::lSurfaceImpl::CreateLShape(struct landscape::Square *)
public: class landscape::lSurface::lSquare & __thiscall landscape::lSurface::lSquare::operator=(class landscape::lSurface::lSquare const &)
public: class landscape::lSurface::lSquare & __thiscall landscape::lSurfaceImpl::LoadSquare(struct intpoint)
public: class landscape::lSurfaceDataManager & __thiscall landscape::lSurfaceDataManager::operator=(class landscape::lSurfaceDataManager const &)
public: class landscape::lSurfaceImpl & __thiscall landscape::lSurfaceImpl::operator=(class landscape::lSurfaceImpl const &)
public: class landscape_old::lPointOnSurface & __thiscall landscape_old::lPointOnSurface::operator+=(class E3::Vector const &)
public: class landscape_old::lPointOnSurface & __thiscall landscape_old::lPointOnSurface::operator-=(class E3::Vector const &)
public: class landscape_old::lPointOnSurface & __thiscall landscape_old::lPointOnSurface::operator=(class E3::Vector const &)
public: class landscape_old::lPointOnSurface & __thiscall landscape_old::lPointOnSurface::operator=(class landscape_old::lPointOnSurface const &)
public: class landscape_old::lSurface::lRegion & __thiscall landscape_old::lSurfaceImpl::LoadRegion(struct intpoint)
public: class landscape_old::lSurface::lSquare & __thiscall landscape_old::lSurfaceImpl::LoadSquare(struct intpoint)
public: class landscape_old::lSurfaceImpl & __thiscall landscape_old::lSurfaceImpl::operator=(class landscape_old::lSurfaceImpl const &)
public: class misc::pIRefCounter<class landscape_old::lSurface::lShape> __thiscall landscape_old::lSurfaceImpl::getRegionTemplate(struct intpoint,int)
public: class misc::pIRefCounter<class landscape_old::lSurface::lShape> __thiscall landscape_old::lSurfaceImpl::getSquareTemplate(struct intpoint,int)
public: class misc::ptr<struct landscape::Square> * __thiscall landscape::lSurfaceFile::getSquareRef(struct intpoint,int)
public: class misc::ptr<struct roads::Square> * __thiscall roads::lRoadFile::getSquare(struct intpoint)
public: class models::lModel * __thiscall models::File::getModel(char const *)
public: class models::lModel * __thiscall models::File::getModel(int)
public: class onlay2::OnLayFile & __thiscall onlay2::OnLayFile::operator=(class onlay2::OnLayFile const &)
public: class onlay2::OnLayFileImpl & __thiscall onlay2::OnLayFileImpl::operator=(class onlay2::OnLayFileImpl const &)
public: class path::Cross & __thiscall path::Cross::operator=(class path::Cross const &)
public: class path::Path & __thiscall path::Path::operator=(class path::Path const &)
public: class path::PathNetwork & __thiscall path::PathNetwork::operator=(class path::PathNetwork const &)
public: class path::PointOnPath & __thiscall path::PointOnPath::operator=(class path::PointOnPath const &)
public: class roads::PointOnRoadH & __thiscall roads::PointOnRoadH::operator=(class roads::PointOnRoadH const &)
public: class squareonlaysemanticlist & __thiscall squareonlaysemanticlist::operator=(class squareonlaysemanticlist const &)
public: class squareonlaysemanticlist * __thiscall lOnLayManager::GetRegion(struct intpoint)
public: class squareonlaysemanticlist * __thiscall lOnLayManager::GetSquare(struct intpoint,int)
public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall RoadnetworkFile::getName(void)
public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __thiscall superficial::lSuperficialFile::DumpLevel(int)
public: class std::list<struct OnLaySquareSection::OnLay *,class std::allocator<struct OnLaySquareSection::OnLay *> > & __thiscall lOnLayManager2::onlaytexstruct::getTex(int,char const * &)
public: class std::list<struct OnLaySquareSection::OnLay *,class std::allocator<struct OnLaySquareSection::OnLay *> > & __thiscall squareonlaysemanticlist::getOnlayList(int)
public: class std::list<struct SceneFileHeader::Square *,class std::allocator<struct SceneFileHeader::Square *> > & __thiscall SceneFileManager::GetSquare(int)
public: float __thiscall landscape::Square::getHeight(float,float)
public: float __thiscall landscape::Square::getHeight(unsigned long,float,float)
public: float __thiscall landscape::lPointOnSurface::getHeight(void)
public: float __thiscall landscape::lSurfaceFile::getSquareHeigth(struct intpoint,int)
public: float __thiscall landscape_old::LandscapeSquareSection::Square::getHeight(float,float)
public: float __thiscall landscape_old::LandscapeSquareSection::Square::getHeight(unsigned long,float,float)
public: float __thiscall landscape_old::lPointOnSurface::getHeight(void)
public: float __thiscall roads::PointOnRoad::getDistFromBegin(void)const 
public: float __thiscall roads::PointOnRoad::getDistanceTo(struct roads::PointOnRoad const &)const 
public: float __thiscall roads::PointOnRoad::getDistanceTo(struct roads::RoadAnchor *)const 
public: float __thiscall roads::PointOnRoad::getSegmentParam(void)const 
public: float __thiscall roads::PointOnRoad::getTurningRadius(void)const 
public: float __thiscall roads::PointOnRoadH::getHeigth(void)const 
public: float __thiscall roads::Road::DistanceFromPoint(class E3::Vector const &)const 
public: float __thiscall roads::Road::getLength(void)const 
public: float __thiscall roads::Road::getSegmentLength(void)const 
public: float __thiscall roads::Segment::ArcAngle(void)const 
public: float __thiscall roads::Segment::DistanceFromPoint(class E3::Vector const &)const 
public: float __thiscall roads::Segment::getAngleByParam(float)const 
public: float __thiscall roads::Segment::getLength(void)const 
public: float __thiscall roads::Segment::getLengthByParam(float)const 
public: int __thiscall LandAreaFile::getRegionType(struct intpoint)
public: int __thiscall LandAreaFile::getSquareType(struct intpoint)
public: int __thiscall OnLayFile::getSquareCount(void)
public: int __thiscall RoadnetworkFile::GetCrossroadCount(void)
public: int __thiscall RoadnetworkFile::GetRoadCount(void)
public: int __thiscall RoadnetworkFile::GetSceneObjectCount(void)
public: int __thiscall RoadnetworkFile::GetSquareCount(void)
public: int __thiscall RoadnetworkFile::getNumVertex(struct RoadsSection::Road *)
public: int __thiscall RoadnetworkFile::getNumVertex(struct SqrLinksSection::Square *)
public: int __thiscall SceneFile::GetSquareCount(void)
public: int __thiscall SceneFileManager::getSquareCount(void)
public: int __thiscall cdds::Texture::size(void)
public: int __thiscall geometry::GeometrySource::getType(void)
public: int __thiscall lCmdFile::GetObjectCount(void)
public: int __thiscall lCmdFile::getTextureCount(void)
public: int __thiscall lLandRoadManager::RoadSquare::getAsmStrip(int &,struct RoadsSection::Road::RoadStripe * * &)
public: int __thiscall lLandRoadManager::RoadSquare::getAsmStripCount(void)
public: int __thiscall lLandRoadManager::RoadSquare::getFaceCount(void)
public: int __thiscall lLandRoadManager::RoadSquare::getStripCount(void)
public: int __thiscall lLandRoadManager::RoadSquare::getVertCount(void)
public: int __thiscall lOnLayManager2::onlaysemstruct::getSemanticCount(void)
public: int __thiscall lOnLayManager2::onlaysemstruct::getSemanticType(int)
public: int __thiscall lOnLayManager2::onlaytexstruct::getTexCount(void)
public: int __thiscall lSemanticSquare::Init(struct intpoint,class std::list<struct lSuperficialFile *,class std::allocator<struct lSuperficialFile *> > &,int *,int)
public: int __thiscall landscape::Square::envelopeSquare(class E3::Vector const &,class E3::Vector const &,class E3::Vector *,int,struct landscape::Square::FaceNeighbour::faceref &)
public: int __thiscall landscape::Square::getNumFaces(int)
public: int __thiscall landscape::Square::getNumFaces(void)
public: int __thiscall landscape::Square::getNumParts(void)
public: int __thiscall landscape::Square::getNumVrts(int)
public: int __thiscall landscape_old::LandscapeSquareSection::Square::envelopeSquare(class E3::Vector const &,class E3::Vector const &,class E3::Vector *,int,struct landscape_old::LandscapeSquareSection::Square::FaceNeighbour::faceref &)
public: int __thiscall landscape_old::LandscapeSquareSection::Square::getNumFaces(int)
public: int __thiscall landscape_old::LandscapeSquareSection::Square::getNumParts(void)
public: int __thiscall landscape_old::LandscapeSquareSection::Square::getNumVrts(int)
public: int __thiscall material::Material::Parameter::ToString(char *,long)
public: int __thiscall models::File::getModelCount(void)
public: int __thiscall roads::Crossroad::getAnchorIndex(struct roads::RoadAnchor const *)const 
public: int __thiscall roads::Road::BoxIntersection(class E3::Vector const &,class E3::Vector const &,class std::vector<struct roads::PointOnRoad,class std::allocator<struct roads::PointOnRoad> > &)const 
public: int __thiscall roads::Road::CircleIntersection(class E3::Vector const &,float,class std::vector<struct roads::PointOnRoad,class std::allocator<struct roads::PointOnRoad> > &)const 
public: int __thiscall roads::Road::CircleIntersection(float,class E3::Vector const &,float,class std::vector<struct roads::PointOnRoad,class std::allocator<struct roads::PointOnRoad> > &)const 
public: int __thiscall roads::Road::SegmentIntersection(class E3::Vector const &,class E3::Vector const &,class std::vector<struct roads::PointOnRoad,class std::allocator<struct roads::PointOnRoad> > &)const 
public: int __thiscall roads::Road::SerializeSize(void)const 
public: int __thiscall roads::Segment::BoxIntersection(class E3::Vector const *,class std::vector<struct roads::PointOnRoad,class std::allocator<struct roads::PointOnRoad> > &)const 
public: int __thiscall roads::Segment::CircleIntersection(class E3::Vector const &,float,struct roads::PointOnRoad *)const 
public: int __thiscall roads::Segment::SegmentIntersection(class E3::Vector const &,class E3::Vector const &,struct roads::PointOnRoad *)const 
public: int __thiscall roads::Segment::SegmentIntersection(struct roads::Segment const &,struct roads::PointOnRoad *)const 
public: int __thiscall roads::Segment::getNumApproxSeg(float,float)const 
public: int __thiscall roads::lRoadFile::SegmentIntersection(class E3::Vector const &,class E3::Vector const &,class std::vector<struct roads::PointOnRoad,class std::allocator<struct roads::PointOnRoad> > &)
public: int __thiscall squareonlaysemanticlist::getSemanticCount(void)
public: int __thiscall superficial::lSuperficialFile::GetSemantics(class E3::Vector const &,char * *,int)
public: short __thiscall landscape::Square::segmentSideOut(class E3::Vector const &,class E3::Vector const &,unsigned long,class E3::Vector *)
public: short __thiscall landscape_old::LandscapeSquareSection::Square::segmentSideOut(class E3::Vector const &,class E3::Vector const &,unsigned long,class E3::Vector *)
public: static bool __cdecl lSuperficialFile::SortPredicate(class misc::ptr<struct lSuperficial> const &,class misc::ptr<struct lSuperficial> const &)
public: static bool __cdecl nsRenderState::RenderState_file::SetRenderStates(char const *,struct IDirect3DDevice8 *,class std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &)
public: static bool __cdecl nsRenderState::RenderState_file::SetRenderStates(class std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > > > &,struct IDirect3DDevice8 *,class std::list<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,clas
public: static bool __cdecl roads::Road::BuildRoadsFillet(struct roads::Road const &,struct roads::Road const &,float,struct roads::Segment &,struct roads::PointOnRoad &,struct roads::PointOnRoad &)
public: static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl nsRenderState::RenderState_file::getParentRsBlock(char const *)
public: static struct cdds::File * __cdecl cdds::File::Open(char const *,class misc::mmf &)
public: static struct lSuperficialFile * __cdecl lSuperficialFile::Open(char const *,class misc::mmf &)
public: static struct landscape::lSurfaceFile * __cdecl landscape::lSurfaceFile::Open(char const *,class misc::mmf &,struct _FILETIME &)
public: static struct material::MaterialAliasFile * __cdecl material::MaterialAliasFile::Open(char const *,class misc::mmf &)
public: static struct models::File * __cdecl models::File::BuildFile(class std::list<struct models::File::Source,class std::allocator<struct models::File::Source> > &,class misc::mmf_write &)
public: static struct models::File * __cdecl models::File::Open(char const *,class misc::mmf &)
public: static struct roads::CrossroadTypeFile * __cdecl roads::CrossroadTypeFile::Open(char const *,class misc::mmf &)
public: static struct roads::Road * __cdecl roads::Road::BuildFromList(class std::list<struct roads::Road *,class std::allocator<struct roads::Road *> > &)
public: static struct roads::Road * __cdecl roads::Road::BuildFromSegment(struct roads::Segment const &)
public: static struct roads::Road * __cdecl roads::Road::BuildLineSeg(class E3::Vector const &,class E3::Vector const &,unsigned long)
public: static struct roads::lRoadFile * __cdecl roads::lRoadFile::Open(char const *,class misc::mmf &)
public: static struct superficial::lSuperficialFile * __cdecl superficial::lSuperficialFile::BuildFile(class std::list<struct superficial::lSuperficialFile::Source,class std::allocator<struct superficial::lSuperficialFile::Source> > &,class misc::mmf_write &)
public: static struct superficial::lSuperficialFile * __cdecl superficial::lSuperficialFile::Open(char const *,class misc::mmf &)
public: static unsigned long __cdecl nsRenderState::RenderState_file::CreateStateBlock(char const *,struct IDirect3DDevice8 *,struct nsRenderState::RenderState_file * &,class misc::mmf &,struct nsRenderState::RenderState_file *)
public: static unsigned long __cdecl nsRenderState::RenderState_file::CreateStateBlock(char const *,struct IDirect3DDevice8 *,struct nsRenderState::RenderState_file *)
public: static void __cdecl landscape::lPointOnSurface::BuildSemanticBmp(class Box &,class math::matrixMN<struct math::t_rgb<unsigned char> > &)
public: static void __cdecl landscape::lPointOnSurface::BuildSemanticBmp(class Box &,class math::matrixMN<unsigned char> &)
public: static void __cdecl landscape::lSurfaceFile::UpdateFile(char const *,char const *,class std::list<struct std::pair<struct landscape::SquareKey,struct landscape::Square *>,class std::allocator<struct std::pair<struct landscape::SquareKey,struct landscape::Square *> > > &,struct landscape::Square * * const,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,class std::list<struct landscape::SquareKey,class std::allocator<struct landscape::SquareKey> > &)
public: static void __cdecl roads::lRoadFile::Build(class std::list<struct roads::Road *,class std::allocator<struct roads::Road *> > &,class misc::vector<struct roads::Road> &,class misc::vector<struct roads::Crossroad> &,class misc::mmf_write &)
public: struct CrossroadsSection::Crossroad * __thiscall RoadnetworkFile::GetCrossRoad(int)
public: struct OnLaySquareSection::Square * __thiscall OnLayFile::getSquare(int)
public: struct RoadNetFileHeader * __thiscall RoadnetworkFile::GetHeader(void)
public: struct RoadsSection::Road * __thiscall RoadnetworkFile::GetRoad(int)
public: struct RoadsSection::Road::RoadCenterLine * __thiscall RoadnetworkFile::GetCentrline(unsigned long)
public: struct RoadsSection::Road::RoadStripe * __thiscall RoadnetworkFile::GetStrip(unsigned long)
public: struct RoadsSection::Road::RoadStripe * __thiscall lLandRoadManager::RoadSquare::getStrip(int)
public: struct SceneFileHeader * __thiscall SceneFile::GetHeader(void)
public: struct SceneFileHeader::Square * __thiscall SceneFile::GetSquare(int)
public: struct SceneSection::Object * __thiscall RoadnetworkFile::GetSceneObject(int)
public: struct SemanticDef & __thiscall SemanticDef::operator=(struct SemanticDef const &)
public: struct SqrLinksSection::Square * __thiscall RoadnetworkFile::GetSquare(int)
public: struct cdds::File & __thiscall cdds::File::operator=(struct cdds::File const &)
public: struct cdds::Item & __thiscall cdds::Item::operator=(struct cdds::Item const &)
public: struct cdds::Item * __thiscall cdds::File::GetTexture(char const *,int)
public: struct cdds::Item * __thiscall cdds::File::GetTexture(int,int)
public: struct cdds::Surface & __thiscall cdds::Surface::operator=(struct cdds::Surface const &)
public: struct cdds::Surface * __thiscall cdds::Texture::surface(int)
public: struct cdds::Texture & __thiscall cdds::Texture::operator=(struct cdds::Texture const &)
public: struct geometry::GeometryItem * __thiscall roads::Road::BuildCenterLine(class E3::Vector const &,float,struct material::Material *,class misc::mmf_write &)
public: struct geometry::GeometryItem * __thiscall roads::Road::BuildMesh(int,int,class E3::Vector const &,float,float,float,float,struct material::Material *,class misc::mmf_write &)
public: struct intpoint __thiscall landscape::lSurfaceFile::getMaxSquare(void)
public: struct intpoint __thiscall landscape::lSurfaceFile::getMinSquare(void)
public: struct lCmdFileHeader & __thiscall lCmdFileHeader::operator=(struct lCmdFileHeader const &)
public: struct lCmdFileHeader::ObjectName & __thiscall lCmdFileHeader::ObjectName::operator=(struct lCmdFileHeader::ObjectName const &)
public: struct lCmdFileHeader::ObjectShape & __thiscall lCmdFileHeader::ObjectShape::operator=(struct lCmdFileHeader::ObjectShape const &)
public: struct lCmdFileHeader::ObjectShape * __thiscall lCmdFile::GetObjectA(char const *)
public: struct lCmdFileHeader::ObjectShape * __thiscall lCmdFileHeader::getObjectShape(int,char * &)
public: struct lCmdFileHeader::Shape * __thiscall lCmdFileHeader::ObjectShape::getShape(unsigned long)
public: struct lCmdFileHeader::TextureName & __thiscall lCmdFileHeader::TextureName::operator=(struct lCmdFileHeader::TextureName const &)
public: struct lOnLayManager2::onlaysemstruct & __thiscall lOnLayManager2::onlaysemstruct::operator=(struct lOnLayManager2::onlaysemstruct const &)
public: struct lOnLayManager2::onlaytexstruct & __thiscall lOnLayManager2::onlaytexstruct::operator=(struct lOnLayManager2::onlaytexstruct const &)
public: struct lOnLayManager2::onlaytexstruct * __thiscall lOnLayManager2::onlaysemstruct::getSemantic(int)
public: struct lSuperficial * __thiscall lSuperficialFile::FindByName(char const *)
public: struct lSuperficial * __thiscall lSuperficialFile::FindBySquare(struct intpoint,int)
public: struct landscape::Square & __thiscall landscape::Square::operator=(struct landscape::Square const &)
public: struct landscape::Square * __thiscall landscape::lSurfaceFile::AppendSquare(struct landscape::Square *,class std::list<struct landscape::Square *,class std::allocator<struct landscape::Square *> > &,class std::map<struct material::Material *,struct material::Material *,struct material::Pred_MaterialPointers,class std::allocator<struct material::Material *> > &,class misc::mmf_write &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
public: struct landscape::Square * __thiscall landscape::lSurfaceFile::getOffsideSquare(int)
public: struct landscape::Square * __thiscall landscape::lSurfaceFile::getSquare(struct intpoint,int)
public: struct landscape::Square::FaceNeighbour * __thiscall landscape::Square::getNeighbour(void)
public: struct landscape::Square::Part * __thiscall landscape::Square::getPart(int)
public: struct landscape::Square::SideBoundFaces * __thiscall landscape::Square::getBoundFaces(int)
public: struct landscape::lSurfaceFile & __thiscall landscape::lSurfaceFile::operator=(struct landscape::lSurfaceFile const &)
public: struct landscape_old::LandAreaFileHeader & __thiscall landscape_old::LandAreaFileHeader::operator=(struct landscape_old::LandAreaFileHeader const &)
public: struct landscape_old::LandscapeSquareSection & __thiscall landscape_old::LandscapeSquareSection::operator=(struct landscape_old::LandscapeSquareSection const &)
public: struct landscape_old::LandscapeSquareSection::Square & __thiscall landscape_old::LandscapeSquareSection::Square::operator=(struct landscape_old::LandscapeSquareSection::Square const &)
public: struct landscape_old::LandscapeSquareSection::Square * * __thiscall LandAreaFile::getRegions(int &)
public: struct landscape_old::LandscapeSquareSection::Square * * __thiscall LandAreaFile::getSquares(int &)
public: struct landscape_old::LandscapeSquareSection::Square * __thiscall LandAreaFile::getRegion(int,struct intpoint)
public: struct landscape_old::LandscapeSquareSection::Square * __thiscall LandAreaFile::getRegionTemplate(int,int)
public: struct landscape_old::LandscapeSquareSection::Square * __thiscall LandAreaFile::getSquare(int)
public: struct landscape_old::LandscapeSquareSection::Square * __thiscall LandAreaFile::getSquare(int,struct intpoint)
public: struct landscape_old::LandscapeSquareSection::Square * __thiscall LandAreaFile::getSquareTemplate(int,int)
public: struct landscape_old::LandscapeSquareSection::Square * __thiscall LandAreaFile::getTemplate(int)
public: struct landscape_old::LandscapeSquareSection::Square * __thiscall LandSquareFile::getSquare(int)
public: struct landscape_old::LandscapeSquareSection::Square * __thiscall landscape_old::LandscapeSquareSection::getSquare(int)
public: struct landscape_old::LandscapeSquareSection::Square::FaceNeighbour * __thiscall landscape_old::LandscapeSquareSection::Square::getNeighbour(void)
public: struct landscape_old::LandscapeSquareSection::Square::Part * __thiscall landscape_old::LandscapeSquareSection::Square::getPart(int)
public: struct landscape_old::LandscapeSquareSection::Square::SideBoundFaces * __thiscall landscape_old::LandscapeSquareSection::Square::getBoundFaces(int)
public: struct ltv2V * __thiscall landscape::Square::getTVerts(void)
public: struct ltv2V * __thiscall landscape_old::LandscapeSquareSection::Square::getTVerts(void)
public: struct ltv2V __thiscall landscape_old::LandscapeSquareSection::Square::getTVert(int,int)
public: struct material::Material & __thiscall material::Material::operator=(struct material::Material const &)
public: struct material::MaterialAlias & __thiscall material::MaterialAlias::operator=(struct material::MaterialAlias const &)
public: struct material::MaterialAlias * __thiscall material::MaterialAliasFile::getAlias(char *)
public: struct material::MaterialAlias::MaxParamSource & __thiscall material::MaterialAlias::MaxParamSource::operator=(struct material::MaterialAlias::MaxParamSource const &)
public: struct material::MaterialAlias::RealMaterial & __thiscall material::MaterialAlias::RealMaterial::operator=(struct material::MaterialAlias::RealMaterial const &)
public: struct material::MaterialAliasFile & __thiscall material::MaterialAliasFile::operator=(struct material::MaterialAliasFile const &)
public: struct roads::Crossroad & __thiscall roads::Crossroad::operator=(struct roads::Crossroad const &)
public: struct roads::Crossroad * __thiscall roads::RoadAnchor::getCross(void)const 
public: struct roads::Crossroad * __thiscall roads::RoadAnchor::getOponentCross(void)const 
public: struct roads::CrossroadType & __thiscall roads::CrossroadType::operator=(struct roads::CrossroadType const &)
public: struct roads::CrossroadType::CrossAngle & __thiscall roads::CrossroadType::CrossAngle::operator=(struct roads::CrossroadType::CrossAngle const &)
public: struct roads::CrossroadTypeFile & __thiscall roads::CrossroadTypeFile::operator=(struct roads::CrossroadTypeFile const &)
public: struct roads::PointOnRoad & __thiscall roads::PointOnRoad::operator=(struct roads::PointOnRoad const &)
public: struct roads::PointOnRoad __thiscall roads::Road::getEnd(void)const 
public: struct roads::PointOnRoad __thiscall roads::Road::getStart(void)const 
public: struct roads::PointOnRoad __thiscall roads::RoadAnchor::getPOR(void)const 
public: struct roads::PointOnRoad __thiscall roads::RoadSceneObject::getPointOnRoad(void)
public: struct roads::Road & __thiscall roads::Road::operator=(struct roads::Road const &)
public: struct roads::Road * __thiscall roads::CrossroadType::getRoad(struct roads::Crossroad *,struct roads::RoadAnchor *,struct roads::RoadAnchor *,bool &)
public: struct roads::Road * __thiscall roads::Road::Copy(void)
public: struct roads::Road * __thiscall roads::Road::CutRoad(struct roads::PointOnRoad const &,struct roads::PointOnRoad const &)
public: struct roads::Road * __thiscall roads::Road::InsertRoad(struct roads::PointOnRoad const &,struct roads::PointOnRoad const &,struct roads::Road &)
public: struct roads::Road * __thiscall roads::RoadAnchor::getRoad(void)const 
public: struct roads::Road * __thiscall roads::Square::FindClosestRoad(class E3::Vector const &,unsigned long &,float &,bool (__cdecl*)(struct roads::Segment const &))
public: struct roads::RoadAnchor & __thiscall roads::RoadAnchor::operator=(struct roads::RoadAnchor const &)
public: struct roads::RoadAnchor * __thiscall roads::Crossroad::FindRoadAnchor(struct roads::Road *)
public: struct roads::RoadAnchor * __thiscall roads::RoadAnchor::getOponentAnchor(void)
public: struct roads::RoadLink & __thiscall roads::RoadLink::operator=(struct roads::RoadLink const &)
public: struct roads::RoadSceneObject & __thiscall roads::RoadSceneObject::operator=(struct roads::RoadSceneObject const &)
public: struct roads::SceneObject & __thiscall roads::SceneObject::operator=(struct roads::SceneObject const &)
public: struct roads::Segment & __thiscall roads::Segment::operator=(struct roads::Segment const &)
public: struct roads::Segment * __thiscall roads::Road::getEndSegment(void)
public: struct roads::Segment * __thiscall roads::Road::getSegment(int)
public: struct roads::Segment * __thiscall roads::Road::getStartSegment(void)
public: struct roads::Square & __thiscall roads::Square::operator=(struct roads::Square const &)
public: struct roads::lRoadFile & __thiscall roads::lRoadFile::operator=(struct roads::lRoadFile const &)
public: struct roads::lRoadFile * __thiscall RoadnetworkFile::ConvertToRoadFile(class misc::mmf_write &)
public: struct superficial::lSuperficialFile::Source & __thiscall superficial::lSuperficialFile::Source::operator=(struct superficial::lSuperficialFile::Source const &)
public: union li3V * __thiscall landscape::Square::getFaces(void)
public: union li3V * __thiscall landscape_old::LandscapeSquareSection::Square::getFaces(void)
public: union li3V __thiscall landscape_old::LandscapeSquareSection::Square::getFaceVert(int,int)
public: unsigned long & __thiscall landscape_old::LandAreaFileHeader::getRegionStandart(int,int)
public: unsigned long & __thiscall landscape_old::LandAreaFileHeader::getSquareStandart(int,int)
public: unsigned long * __thiscall landscape::Square::getTypes(void)
public: unsigned long * __thiscall landscape_old::LandscapeSquareSection::Square::getTypes(void)
public: unsigned long __thiscall LandAreaFile::getLandSquareFileCount(void)
public: unsigned long __thiscall LandAreaFile::getSquareCount(void)
public: unsigned long __thiscall LandAreaFile::getTemplateCount(void)
public: unsigned long __thiscall LandSquareFile::getSquareCount(void)
public: unsigned long __thiscall landscape::Square::findTrg(float,float)
public: unsigned long __thiscall landscape::Square::findTrg(unsigned long,float,float)
public: unsigned long __thiscall landscape::Square::getFace(struct landscape::Square::FaceNeighbour::faceref &)
public: unsigned long __thiscall landscape::lPointOnSurface::getTypeSurface(void)
public: unsigned long __thiscall landscape_old::LandscapeSquareSection::Square::findTrg(float,float)
public: unsigned long __thiscall landscape_old::LandscapeSquareSection::Square::findTrg(unsigned long,float,float)
public: unsigned long __thiscall landscape_old::LandscapeSquareSection::Square::getFace(struct landscape_old::LandscapeSquareSection::Square::FaceNeighbour::faceref &)
public: unsigned long __thiscall landscape_old::lPointOnSurface::getTypeSurface(void)
public: virtual __thiscall landscape::lSurface::lRegion::~lRegion(void)
public: virtual __thiscall landscape::lSurface::lShape::~lShape(void)
public: virtual __thiscall landscape::lSurface::lSquare::~lSquare(void)
public: virtual __thiscall landscape::lSurfaceImpl::~lSurfaceImpl(void)
public: virtual __thiscall landscape_old::lSurfaceImpl::~lSurfaceImpl(void)
public: virtual bool __thiscall LandTexturesFile::Open(char const *)
public: virtual bool __thiscall lLandRoadManagerImpl::ConvertToSuperficial(char const *)
public: virtual bool __thiscall lLandRoadManagerImpl::Open(char const *)
public: virtual bool __thiscall landscape::lSurface::lSquare::IsPointOn(float,float,int)
public: virtual bool __thiscall landscape::lSurfaceImpl::findClosest(class E3::Vector const &,class E3::Vector &,bool,float)
public: virtual bool __thiscall landscape::lSurfaceImpl::segmentIntersect(class E3::Vector const &,class E3::Vector const &,class E3::Vector *)
public: virtual bool __thiscall landscape_old::lSurfaceImpl::segmentIntersect(class E3::Vector const &,class E3::Vector const &,class E3::Vector *)
public: virtual bool __thiscall onlay2::OnLayFileImpl::Open(char const *)
public: virtual char const * __thiscall LandTexturesFile::GetError(void)
public: virtual char const * __thiscall LandTexturesFile::getTextureName(int)
public: virtual char const * __thiscall onlay2::OnLayFileImpl::GetError(void)
public: virtual class lLandRoadManager::RoadSquare * __thiscall lLandRoadManagerImpl::GetSquareRails(struct intpoint)
public: virtual class lLandRoadManager::RoadSquare * __thiscall lLandRoadManagerImpl::GetSquareRoads(struct intpoint)
public: virtual class landscape::lSurface::lRegion & __thiscall landscape::lSurfaceImpl::GetRegion(struct intpoint)
public: virtual class landscape::lSurface::lSquare & __thiscall landscape::lSurfaceImpl::GetSquare(struct intpoint)
public: virtual class landscape_old::lSurface::lRegion & __thiscall landscape_old::lSurfaceImpl::GetRegion(struct intpoint)
public: virtual class landscape_old::lSurface::lSquare & __thiscall landscape_old::lSurfaceImpl::GetSquare(struct intpoint)
public: virtual float __thiscall landscape::lSurfaceImpl::getDirtyHeight(float,float,float)
public: virtual float __thiscall landscape::lSurfaceImpl::getDirtyHeight(struct intpoint,int)
public: virtual float __thiscall landscape::lSurfaceImpl::getHeight(float,float)
public: virtual float __thiscall landscape_old::lSurfaceImpl::getDirtyHeight(float,float,float)
public: virtual float __thiscall landscape_old::lSurfaceImpl::getHeight(float,float)
public: virtual int __thiscall LandTexturesFile::getTexCount(void)
public: virtual int __thiscall RoadnetworkFile::LoadScene(class viObjectManager *,class std::list<struct BinarySceneAndTree::LinkDecl,class std::allocator<struct BinarySceneAndTree::LinkDecl> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
public: virtual int __thiscall RoadnetworkFile::LoadScene(class viObjectManager *,class std::list<struct SceneCache::Object,class std::allocator<struct SceneCache::Object> > &,class std::list<struct SceneCache::LinkDecl,class std::allocator<struct SceneCache::LinkDecl> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
public: virtual int __thiscall SceneFile::LoadScene(class viObjectManager *,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
public: virtual int __thiscall SceneFile::LoadScene(class viObjectManager *,class std::list<struct SceneCache::Object,class std::allocator<struct SceneCache::Object> > &,class std::list<struct SceneCache::LinkDecl,class std::allocator<struct SceneCache::LinkDecl> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
public: virtual int __thiscall lLandRoadManagerImpl::LoadScene(class viObjectManager *)
public: virtual int __thiscall landscape::lSurfaceImpl::envelopeSurface(class E3::Vector const &,class E3::Vector const &,class E3::Vector *,int)
public: virtual int __thiscall landscape_old::lSurfaceImpl::envelopeSurface(class E3::Vector const &,class E3::Vector const &,class E3::Vector *,int)
public: virtual struct TexFileHeader::texture * __thiscall LandTexturesFile::getTex(char const *)
public: virtual struct TexFileHeader::texture * __thiscall LandTexturesFile::getTexture(int)
public: virtual struct landscape::Square * __thiscall landscape::lSurfaceImpl::getSquare(struct intpoint,int)
public: virtual struct landscape::lSurfaceFile * __thiscall landscape::lSurfaceImpl::getSurfaceFile(void)
public: virtual struct onlay2::OnLayFileHeader::Square * __thiscall onlay2::OnLayFileImpl::getSquare(struct intpoint,int)
public: virtual struct superficial::lSuperficialFile * __thiscall lLandRoadManagerImpl::ConvertToSuperficial2(class misc::mmf_write &)
public: virtual unsigned long __thiscall landscape::lSurface::lShape::GetFaceSemantic(int)
public: virtual unsigned long __thiscall landscape::lSurfaceImpl::getFaceType(float,float)
public: virtual unsigned long __thiscall landscape_old::lSurfaceImpl::getFaceType(float,float)
public: virtual void __thiscall LandTexturesFile::Close(void)
public: virtual void __thiscall LandTexturesFile::Release(void)
public: virtual void __thiscall lLandRoadManagerImpl::Close(void)
public: virtual void __thiscall lLandRoadManagerImpl::Release(void)
public: virtual void __thiscall landscape::lSurface::lRegion::Init(void)
public: virtual void __thiscall landscape::lSurface::lShape::Init(void)
public: virtual void __thiscall landscape::lSurface::lSquare::Init(void)
public: virtual void __thiscall landscape::lSurface::lSquare::InitSS(void)
public: virtual void __thiscall landscape::lSurfaceImpl::Exit(void)
public: virtual void __thiscall landscape::lSurfaceImpl::GetSourceVersion(struct _FILETIME &)
public: virtual void __thiscall landscape::lSurfaceImpl::Init(class landscape::lSurfaceDataManager *,char const *)
public: virtual void __thiscall landscape::lSurfaceImpl::Release(void)
public: virtual void __thiscall landscape::lSurfaceImpl::getFaceId(float,float,unsigned long &,struct intpoint &)
public: virtual void __thiscall landscape::lSurfaceImpl::getFaceSpecs(float,float,class E3::Vector &,class E3::Vector &,class E3::Vector &,class E3::Vector &)
public: virtual void __thiscall landscape::lSurfaceImpl::getFaceSpecs(struct intpoint,unsigned long,class E3::Vector &,class E3::Vector &,class E3::Vector &,class E3::Vector &)
public: virtual void __thiscall landscape::lSurfaceImpl::getRegionsBound(struct intpoint &,struct intpoint &)
public: virtual void __thiscall landscape::lSurfaceImpl::getSquaresBound(struct intpoint &,struct intpoint &)
public: virtual void __thiscall landscape_old::lSurfaceImpl::Exit(void)
public: virtual void __thiscall landscape_old::lSurfaceImpl::GetSourceVersion(struct _FILETIME &)
public: virtual void __thiscall landscape_old::lSurfaceImpl::Init(class landscape_old::lSurfaceDataManager *,char const *)
public: virtual void __thiscall landscape_old::lSurfaceImpl::Release(void)
public: virtual void __thiscall landscape_old::lSurfaceImpl::getFaceId(float,float,unsigned long &,struct intpoint &)
public: virtual void __thiscall landscape_old::lSurfaceImpl::getFaceSpecs(float,float,class E3::Vector &,class E3::Vector &,class E3::Vector &,class E3::Vector &)
public: virtual void __thiscall landscape_old::lSurfaceImpl::getFaceSpecs(struct intpoint,unsigned long,class E3::Vector &,class E3::Vector &,class E3::Vector &,class E3::Vector &)
public: virtual void __thiscall landscape_old::lSurfaceImpl::getRegionsBound(struct intpoint &,struct intpoint &)
public: virtual void __thiscall landscape_old::lSurfaceImpl::getSquaresBound(struct intpoint &,struct intpoint &)
public: virtual void __thiscall onlay2::OnLayFileImpl::Close(void)
public: virtual void __thiscall onlay2::OnLayFileImpl::Release(void)
public: void __thiscall LandAreaFile::Close(void)
public: void __thiscall LandAreaFile::getRegionsBound(struct intpoint &,struct intpoint &)
public: void __thiscall LandAreaFile::getSquaresBound(struct intpoint &,struct intpoint &)
public: void __thiscall LandSquareFile::Close(void)
public: void __thiscall LandTexturesFile::FreePermanent(void)
public: void __thiscall LandTexturesFile::PreLoad(void)
public: void __thiscall OnLayFile::Close(void)
public: void __thiscall TexFileHeader::texture::init(struct IDirect3DTexture8 *,char const *,struct tagPALETTEENTRY *,struct TexFileHeader::texture *,class misc::mmf_write &)
public: void __thiscall TexFileHeader::texture::initsurfaces(struct IDirect3DTexture8 *,int,int,class misc::mmf_write &)
public: void __thiscall geometry::GeometrySource::BuildFromList(class std::list<struct geometry::GeometryItem *,class std::allocator<struct geometry::GeometryItem *> > &,class misc::mmf_write &,class std::vector<struct geometry::GeometryItem,class std::allocator<struct geometry::GeometryItem> > &)
public: void __thiscall geometry::GeometrySource::Init(struct geometry::GeometryItem &,class misc::mmf_write &)
public: void __thiscall geometry::GeometrySource::Init(struct geometry::GeometrySource &,class misc::mmf_write &)
public: void __thiscall geometry::GeometrySource::setFaces(union li3V *,int,class misc::mmf_write *)
public: void __thiscall geometry::GeometrySource::setLines(union li2V *,int,class misc::mmf_write *)
public: void __thiscall geometry::GeometrySource::setNorms(class E3::Vector *,int,class misc::mmf_write *)
public: void __thiscall geometry::GeometrySource::setTVerts(int,struct ltv2V *,int,class misc::mmf_write *)
public: void __thiscall geometry::GeometrySource::setVerts(class E3::Vector *,int,class misc::mmf_write *)
public: void __thiscall lCmdFile::Close(void)
public: void __thiscall lOnLayManager2::Close(void)
public: void __thiscall lOnLayManager2::getSquareData(struct intpoint,int,struct lOnLayManager2::onlaysemstruct &)
public: void __thiscall lOnLayManager2::onlaytexstruct::preload(void)
public: void __thiscall lSuperficial::setSquare(struct intpoint,int)
public: void __thiscall landscape::Square::CreateNeighbourInfo(class misc::mmf_write &,float)
public: void __thiscall landscape::Square::FaceNeighbour::faceref::FindNeighbour(__int16,__int16,union li3V *,int,int,class E3::Vector *,class std::map<float,struct landscape::Square::sidefacedata,struct std::less<float>,class std::allocator<struct landscape::Square::sidefacedata> > *)
public: void __thiscall landscape::Square::Init(int,class std::list<struct geometry::GeometrySource *,class std::allocator<struct geometry::GeometrySource *> > &,class std::list<struct geometry::GeometryItem *,class std::allocator<struct geometry::GeometryItem *> > &,class misc::mmf_write &)
public: void __thiscall landscape::Square::Init(struct landscape::Square &,class std::map<struct material::Material *,struct material::Material *,struct material::Pred_MaterialPointers,class std::allocator<struct material::Material *> > &,class misc::mmf_write &)
public: void __thiscall landscape::Square::getFaceSpecs(unsigned long,class E3::Vector &,class E3::Vector &,class E3::Vector &,class E3::Vector &)
public: void __thiscall landscape::Square::preload(void)
public: void __thiscall landscape::Square::setFaceNeighbours(struct landscape_old::LandscapeSquareSection::Square::FaceNeighbour *,int,class misc::mmf_write *)
public: void __thiscall landscape::Square::setFaceTypes(unsigned long *,int,class misc::mmf_write *)
public: void __thiscall landscape::Square::setSideBounds(int,struct landscape_old::LandscapeSquareSection::Square::SideBoundFaces *,class misc::mmf_write *)
public: void __thiscall landscape::lPointOnSurface::getNormal(class E3::Vector &)
public: void __thiscall landscape::lPointOnSurface::getPoint(class E3::Vector &)const 
public: void __thiscall landscape::lPointOnSurface::set(float,float)
public: void __thiscall landscape::lSurfaceFile::BuildHeigths(int,class misc::mmf_write &)
public: void __thiscall landscape_old::LandscapeSquareSection::Square::getFaceSpecs(unsigned long,class E3::Vector &,class E3::Vector &,class E3::Vector &,class E3::Vector &)
public: void __thiscall landscape_old::lPointOnSurface::getNormal(class E3::Vector &)
public: void __thiscall landscape_old::lPointOnSurface::set(float,float)
public: void __thiscall material::Material::CopyFrom(struct material::Material const &,class misc::mmf_write &)
public: void __thiscall material::Material::setMat(char const *)
public: void __thiscall material::Material::setSem(char const *)
public: void __thiscall roads::Crossroad::CopyFrom(struct roads::Crossroad const &)
public: void __thiscall roads::Crossroad::InitRoadAnchors(struct roads::RoadAnchor * *,int,class misc::mmf_write *)
public: void __thiscall roads::Crossroad::setObjects(int)
public: void __thiscall roads::CrossroadType::BuildRoads(class std::list<struct roads::Road *,class std::allocator<struct roads::Road *> > &,class misc::mmf_write &)
public: void __thiscall roads::CrossroadType::CopyFrom(struct roads::CrossroadType const &,class misc::mmf_write &)
public: void __thiscall roads::CrossroadTypeFile::Build(class std::list<struct roads::CrossroadType *,class std::allocator<struct roads::CrossroadType *> > &,class misc::mmf_write &)
public: void __thiscall roads::CrossroadTypeFile::BuildCopy(struct roads::CrossroadTypeFile *,class misc::mmf_write &)
public: void __thiscall roads::PointOnRoad::Move(float)
public: void __thiscall roads::PointOnRoadH::getNormal(class E3::Vector &)const 
public: void __thiscall roads::Road::Approx2d(float,class std::vector<class E3::Vector,class std::allocator<class E3::Vector> > &,float)
public: void __thiscall roads::Road::Approx3d(float,class std::vector<class E3::Vector,class std::allocator<class E3::Vector> > &,float,int,int,float)
public: void __thiscall roads::Road::BuildBox(void)
public: void __thiscall roads::Road::BuildFromList(class std::list<struct roads::Road *,class std::allocator<struct roads::Road *> > &,class std::list<bool,class std::allocator<bool> > &)
public: void __thiscall roads::Road::CalcLength(void)
public: void __thiscall roads::Road::CopyFrom(struct roads::Road const &,class misc::mmf_write *)
public: void __thiscall roads::Road::DeleteAllSegments(void)
public: void __thiscall roads::Road::InitSegmentParams(float,float)
public: void __thiscall roads::Road::InitSegmentParams(void)
public: void __thiscall roads::Road::InsertSegments(struct roads::Segment *,int,int)
public: void __thiscall roads::Road::ModifySegmentsFlag(unsigned long,unsigned long)
public: void __thiscall roads::Road::ProjectPoint(class E3::Vector const &,struct roads::PointOnRoad &)const 
public: void __thiscall roads::Road::RemoveDegradateSegments(void)
public: void __thiscall roads::Road::Reverse(void)
public: void __thiscall roads::Road::Rotate(class E3::Vector const &,float)
public: void __thiscall roads::Road::SetName(char const *)
public: void __thiscall roads::Road::Translate(class E3::Vector const &)
public: void __thiscall roads::Road::getEndPoint(struct roads::PointOnRoad &)const 
public: void __thiscall roads::Road::getStartPoint(struct roads::PointOnRoad &)const 
public: void __thiscall roads::Road::setObjects(int)
public: void __thiscall roads::Road::setStartSegmentParam(float)
public: void __thiscall roads::RoadAnchor::Init(struct roads::Road *,bool)
public: void __thiscall roads::RoadAnchor::setCross(struct roads::Crossroad *)
public: void __thiscall roads::RoadLink::BuildBox(void)
public: void __thiscall roads::Segment::Approx(float,class std::vector<class E3::Vector,class std::allocator<class E3::Vector> > &,float)const 
public: void __thiscall roads::Segment::BuildArc(class E3::Vector const &,class E3::Vector const &,class E3::Vector const &,float)
public: void __thiscall roads::Segment::BuildArc(class E3::Vector const &,class E3::Vector const &,class E3::Vector const &,float,bool)
public: void __thiscall roads::Segment::BuildBox(class Box &)
public: void __thiscall roads::Segment::Cut(float,float,struct roads::Segment &)const 
public: void __thiscall roads::Segment::ProjectPoint(class E3::Vector const &,struct roads::PointOnRoad &)const 
public: void __thiscall roads::Segment::Reverse(void)
public: void __thiscall roads::Segment::Rotate(class E3::Vector const &,float)
public: void __thiscall roads::Segment::SetArc(float,float,class E3::Vector const &,float,bool)
public: void __thiscall roads::Segment::SetArcInverted(void)
public: void __thiscall roads::Segment::SetFlags(unsigned long)
public: void __thiscall roads::Segment::SetLineSeg(class E3::Vector const &,class E3::Vector const &)
public: void __thiscall roads::Segment::Translate(class E3::Vector const &)
public: void __thiscall roads::lRoadFile::Build(class std::list<struct roads::Road *,class std::allocator<struct roads::Road *> > &,class std::list<struct roads::SceneObject,class std::allocator<struct roads::SceneObject> > &,class misc::mmf_write &)
public: void __thiscall roads::lRoadFile::BuildSquares(class misc::mmf_write &)
public: void __thiscall roads::lRoadFile::BuildSuperficial(class misc::mmf_write &)
public: void __thiscall superficial::lSuperficialFile::BuildSemanticBmp(class Box &,class math::matrixMN<struct math::t_rgb<unsigned char> > &)
struct SemanticDef * __cdecl GetSemanticDecl(char const *)
struct SemanticDef * __cdecl GetSemanticDecl(int)
struct SemanticDef * __cdecl GetSemanticList(void)
struct intpoint __cdecl GetAbsoluteRegion(float,float,class E3::Vector *)
struct intpoint __cdecl GetAbsoluteSquare(float,float,class E3::Vector *)
struct intpoint __cdecl GetRegion(float,float,class E3::Vector &)
struct intpoint __cdecl GetSquare(float,float,class E3::Vector &)
struct intpoint __cdecl Neighbour(struct intpoint,short)
void __cdecl GetRegion(float,float,int &,int &,class E3::Vector &)
void __cdecl GetSquare(float,float,int &,int &,class E3::Vector &)
void __cdecl SetTerraDispatch(class lTerraDispatch *)
void __cdecl lTerraPositioning(enum TYPE_POSITINING,class cPosition &,class E3::Vector const &,float,class Box const &)
void __cdecl landscape::SetLandSurface(class landscape::lSurface *)
void __cdecl landscape_old::GenerateSquareMipLevel(struct landscape_old::LandscapeSquareSection::Square *,struct landscape_old::LandscapeSquareSection::Square *,class misc::mmf_write &,float,int,bool)
void __cdecl landscape_old::ReindexFaces(struct landscape_old::LandscapeSquareSection::Square *,struct landscape_old::reindex *,int)
void __cdecl landscape_old::ReindexVertexes(struct landscape_old::LandscapeSquareSection::Square *,struct landscape_old::reindex *,int)
void __cdecl landscape_old::SetLandSurface(class landscape_old::lSurface *)
